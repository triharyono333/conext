<?php

// $Id$

function employer_menu() {
	$items['employer'] = array(
		'title' => t('Employer'),
		'description' => 'Employer',
		'page callback' => 'employer',
		'access callback' => true,
		'type' =>  MENU_CALLBACK,
	);
	
	$items['employer/login'] = array(
		'title' => t('Employer Login'),
		'description' => 'Employer Login',
		'page callback' => 'employer_login',
		'access arguments' => true,
		'access callback' => true,
		'type' =>  MENU_CALLBACK,
	);
	
	$items['employer/register'] = array(
		'title' => t('Employer register'),
		'description' => 'Employer register',
		'page callback' => 'employer_register',
		'access arguments' => true,
		'access callback' => true,
		'type' =>  MENU_CALLBACK,
	);
	
	$items['employer/register/submit'] = array(
		'title' => t('Employer register'),
		'description' => 'Employer register',
		'page callback' => 'employer_register_submit',
		'access arguments' => true,
		'access callback' => true,
		'type' =>  MENU_CALLBACK,
	);
	
	$items['employer/post_job'] = array(
		'title' => t('Employer Post Job'),
		'description' => 'Employer Post Job',
		'page callback' => 'employer_post_job',
		'access arguments' => true,
		'access callback' => true,
		'type' =>  MENU_CALLBACK,
	);
	
	$items['employer/post_job/submit'] = array(
		'title' => t('Employer Post Job'),
		'description' => 'Employer Post Job',
		'page callback' => 'employer_post_job_submit',
		'access arguments' => true,
		'access callback' => true,
		'type' =>  MENU_CALLBACK,
	);
      
	$items['employer/registration_complete'] = array(
		'title' => t('Employer Registration Complete'),
		'description' => 'Employer Registration Complete',
		'page callback' => 'employer_registration_complete',
		'access arguments' => true,
		'access callback' => true,
		'type' =>  MENU_CALLBACK,
	);
	
	$items['employer/registration_thanks'] = array(
		'title' => t('Employer Registration Thanks'),
		'description' => 'Employer Registration Thanks',
		'page callback' => 'employer_registration_thanks',
		'access arguments' => true,
		'access callback' => true,
		'type' =>  MENU_CALLBACK,
	);
	
	$items['employer/account'] = array(
		'title' => t('Employer Account'),
		'description' => 'Employer account',
		'page callback' => 'employer_account',
		'access arguments' => true,
		'access callback' => true,
		'type' =>  MENU_CALLBACK,
	);
	
	$items['employer/account/submit'] = array(
		'title' => t('Employer Account'),
		'description' => 'Employer account',
		'page callback' => 'employer_account_submit',
		'access arguments' => true,
		'access callback' => true,
		'type' =>  MENU_CALLBACK,
	);
      
	
	return $items;
}

/**
 * Implements hook_permission().
 */
function employer_permission() {
  return array(
    'access_employer' => array(
      'title' => t('Access Conext employer page'),
    )
  );
}

/**
 * Implements hook_theme().
 */
function employer_theme($existing, $type, $theme, $path) {
	return array(
		'employer' => array(
			'variables' => array('content' => NULL),
			'template' => 'employer',
			'path' => drupal_get_path('module', 'employer')
		),
		'employer_login' => array(
			'variables' => array('content' => NULL),
			'template' => 'employer_login',
			'path' => drupal_get_path('module', 'employer')
		),
		'employer_register' => array(
			'variables' => array('content' => NULL),
			'template' => 'employer_register',
			'path' => drupal_get_path('module', 'employer')
		),
		'employer_post_job' => array(
			'variables' => array('content' => NULL),
			'template' => 'employer_post_job',
			'path' => drupal_get_path('module', 'employer')
		),
		'employer_registration_complete' => array(
			'variables' => array('content' => NULL),
			'template' => 'employer_registration_complete',
			'path' => drupal_get_path('module', 'employer')
		),
		'employer_registration_thanks' => array(
			'variables' => array('content' => NULL),
			'template' => 'employer_registration_thanks',
			'path' => drupal_get_path('module', 'employer')
		),
		'employer_account' => array(
			'variables' => array('content' => NULL),
			'template' => 'employer_account',
			'path' => drupal_get_path('module', 'employer')
		),
	);
}

/**
 * Implements hook_mail()
 * @param 
 *   type $key to decide which email body to sent on basis of key parameter inacese of multiple email content
 * @param 
 *   type $message the email content to be sent.Message array contains 'subject and body ' for the email.
 * @param 
 *   type $params using to get the cusotm email content from a function.This can be used in my other ways aslo as per need.
 */
function employer_mail($key, &$message, $params) {
	$language = $message['language'];
  switch ($key) {
		//switching on $key lets you create variations of the email based on the $key parameter
    case 'register_verification_email':
      $message['subject'] = t('Conext Contact Email');
			//the email body is here, inside the $message array
      $message['body'][] = $params['body'];
			$message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed';
      break;
		case 'post_job_notification_email':
      $message['subject'] = '[Job Posted] '.$params['body'];
			//the email body is here, inside the $message array
      $message['body'][] = $params['body'];
			$message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed';
      break;
  }
}

function employer() {
	global $user, $base_url;
	
	$roles = $user->roles;
	if (valid_user_role(EMPLOYER_ROLE_ID)) {
		drupal_goto($base_url.'/employer/account');
	} else {
		drupal_goto($base_url.'/employer/login');
	}
	
	//return theme('employer', array('content' => $content));
}

function employer_login() {
	global $user, $base_url;
	
	if (valid_user_role(EMPLOYER_ROLE_ID)) {
		drupal_goto($base_url.'/employer/account');
	} else {
		if ($_POST) {
			conext_login_user ($_POST['username'], $_POST['password'], 'employer/account', 'employer/login', EMPLOYER_ROLE_ID); 
		} else {
			return theme('employer_login');
		}
	}
}

function employer_register() {
	global $user, $base_url;
	
	$salutations = get_term_list ('salutation');
	$industries = get_term_list ('company_industry');
	$cities = db_query("SELECT id, nama_kota FROM conext_kota");
	
	$content = array(
		'salutations' => $salutations,
		'industries' => $industries,
		'cities' => $cities,
		'user' => $user
	);
	
	return theme('employer_register', array('content' => $content));
}

function employer_register_submit() {
	global $user, $base_url;
	
	if ($_POST) {
		if (valid_user_role(EMPLOYER_ROLE_ID)) { // existing user
			drupal_goto($base_url.'/employer');
		} else { // new register user
			conext_register_user ($_POST, 'employer');
			drupal_goto($base_url.'/employer/registration_thanks');
			/*if (empty($_POST['skip_job_post'])) {
				$_SESSION['employer_register'] = $_POST;
				drupal_goto($base_url.'/employer/post_job');
			} else {
				conext_register_user ($_POST, 'employer');
				drupal_goto($base_url.'/employer/registration_thanks');
			}*/
		}
	} else {
		drupal_goto($base_url.'/employer/login');
	}
}

function employer_post_job() {
	global $user, $base_url;
	
	if (valid_user_role(EMPLOYER_ROLE_ID) || (!empty($_SESSION['employer_register']))) {
		$industries = get_term_list ('company_industry');
		$qualifications = get_term_list ('qualification');
		$cities = db_query("SELECT id, nama_kota FROM conext_kota");

		$content = array(
			'salary_min' => array(1, 2, 3, 4, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50),
			'salary_max' => array(2, 3, 4, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 51),
			'qualifications' => $qualifications,
			'cities' => $cities,
			'user' => $user,
			'industries' => $industries
		);

		return theme('employer_post_job', array('content' => $content));
	} else {
		drupal_goto($base_url.'/employer/login');
	}
}

function employer_post_job_submit() {
	global $user, $base_url;
	
	if ($_POST) {
		$new_user = '';
		if (!empty($_SESSION['employer_register'])) {
			$new_user = conext_register_user ($_SESSION['employer_register'], 'employer');
			$_SESSION['employer_register'] = null;
		}
		if (empty($_POST['skip_job_post'])) conext_post_job($_POST, $new_user);
		
		// send post job notification email
		$email_content = $user->mail.' just posted a new job';
		$params = array('body' => $email_content, 'subject' => $user->mail.' just posted a new job');
		$key = 'post_job_notification_email';
		$to = variable_get('conext_contact_email_to');
		$from = variable_get('conext_email_from');
		$mail = drupal_mail('employer', $key, $to, language_default(), $params, $from);
		
		if ($user->uid > 0) drupal_goto($base_url.'/employer/account');
		else drupal_goto($base_url.'/employer/registration_complete');
	} else {
		drupal_goto($base_url.'/employer/login');
	}
}

function employer_account() {
	global $user, $base_url;

	if (valid_user_role(EMPLOYER_ROLE_ID)) {
		$salutations = get_term_list ('salutation');
		$industries = get_term_list ('company_industry');
		$cities = db_query("SELECT id, nama_kota FROM conext_kota");
		$query_job = "SELECT id, drupal_job_id, title, location, job_status, created_at FROM conext_job WHERE employer_id = :employer_id";
		$jobs = db_query($query_job, array('employer_id' => $user->uid));
		$query_employer = "SELECT * FROM users u INNER JOIN conext_employer ce ON u.uid=ce.user_id WHERE u.uid = :uid";
		$employer_data = db_query($query_employer, array('uid' => $user->uid));

		foreach($employer_data as $data) {
			$employer = array(
				'salutation' => $data->salutation,
				'first_name' => $data->first_name,
				'last_name' => $data->last_name,
				'email_address' => $data->mail,
				'phone' => $data->phone,
				'company' => $data->company,
				'address' => $data->address,
				'address_optional' => $data->address_optional,
				'city' => $data->city,
				'industry' => $data->industry
			);
		}

		$content = array(
			'salutations' => $salutations,
			'industries' => $industries,
			'cities' => $cities,
			'user' => $user,
			'jobs' => $jobs,
			'employer' => $employer
		);

		return theme('employer_account', array('content' => $content));
	} else {
		drupal_goto($base_url.'/employer');
	}
}

function employer_account_submit() {
	global $user, $base_url;
	
	if ($_POST) {
		conext_update_user($_POST, 'employer');
		drupal_goto($base_url.'/employer/account');
	}
}

function employer_registration_complete() {
	return theme('employer_registration_complete');
}

function employer_registration_thanks() {
	return theme('employer_registration_thanks');
}
