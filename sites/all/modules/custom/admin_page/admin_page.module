<?php
// $Id$
function admin_page_menu() {
	$items['admin/employer'] = array(
		'title' => t('Admin Employer'),
		'description' => 'Admin Employer',
		'page callback' => 'admin_employer',
		'access arguments' => array('access admin employer'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/employer/detail'] = array(
		'title' => t('Admin Employer Detail'),
		'description' => 'Admin Employer Detail',
		'page callback' => 'admin_employer_detail',
		'access arguments' => array('access admin employer'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/employer/export'] = array(
		'title' => t('Admin Employer Export'),
		'description' => 'Admin Employer Export',
		'page callback' => 'admin_employer_export',
		'access arguments' => array('access admin employer'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job_seeker'] = array(
		'title' => t('Admin Job Seeker'),
		'description' => 'Admin Job Seeker',
		'page callback' => 'admin_job_seeker',
		'access arguments' => array('access admin job seeker'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job_seeker/%/edit'] = array(
		'title' => t('Admin Job Seeker'),
		'description' => 'admin job seeker edit',
		'page callback' => 'admin_job_seeker_edit',
		'page arguments' => array(2),
		'access arguments' => array('access admin job seeker edit'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job_seeker/add'] = array(
		'title' => t('Admin Job Seeker'),
		'description' => 'admin job seeker add',
		'page callback' => 'admin_job_seeker_add',
		'access arguments' => array('access admin job seeker add'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job_seeker/detail'] = array(
		'title' => t('Admin Job Seeker Detail'),
		'description' => 'Admin Job Seeker Detail',
		'page callback' => 'admin_job_seeker_detail',
		'access arguments' => array('access admin job seeker'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job_seeker/export'] = array(
		'title' => t('Admin Job Seeker Export'),
		'description' => 'Admin Job Seeker Export',
		'page callback' => 'admin_job_seeker_export',
		'access arguments' => array('access admin job seeker export'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job_seeker/import'] = array(
		'title' => t('Admin Job Seeker Import'),
		'description' => 'Admin Job Seeker Import',
		'page callback' => 'admin_job_seeker_import',
		'access arguments' => array('access admin job seeker'),
		'type' =>  MENU_CALLBACK,
	);

	$items['admin/job'] = array(
		'title' => t('Admin Job'),
		'description' => 'Admin Job',
		'page callback' => 'admin_job',
		'access arguments' => array('access admin job'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job/detail'] = array(
		'title' => t('Admin Job Detail'),
		'description' => 'Admin Job Detail',
		'page callback' => 'admin_job_detail',
		'access arguments' => array('access admin job'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/contact'] = array(
		'title' => t('Admin Contact'),
		'description' => 'Admin Contact',
		'page callback' => 'admin_contact',
		'access arguments' => array('access admin contact'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/contact/detail'] = array(
		'title' => t('Admin Contact Detail'),
		'description' => 'Admin Contact Detail',
		'page callback' => 'admin_contact_detail',
		'access arguments' => array('access admin contact'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/applied_job_opening'] = array(
		'title' => t('Admin Applied Job Opening'),
		'description' => 'Admin Applied Job Opening',
		'page callback' => 'admin_applied_job_opening',
		'access arguments' => array('access admin applied_job_opening'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/applied_job_opening/detail'] = array(
		'title' => t('Admin Applied Job Opening Detail'),
		'description' => 'Admin Applied Job Opening Detail',
		'page callback' => 'admin_applied_job_opening_detail',
		'access arguments' => array('access admin applied_job_opening'),
		'type' =>  MENU_CALLBACK,
	);
		
	$items['admin/applied_job'] = array(
		'title' => t('Admin Applied Job'),
		'description' => 'Admin Applied Job',
		'page callback' => 'admin_applied_job',
		'access arguments' => array('access admin applied job'),
		'type' =>  MENU_CALLBACK,
	);
     
	$items['admin/other_setting'] = array(
		'title' => t('Other Setting'),
		'description' => 'other setting',
		'page callback' => 'other_setting',
		'access arguments' => array('access other setting'),
		'type' =>  MENU_CALLBACK,
	);
	
	return $items;
}

/**
 * Implements hook_permission().
 */
function admin_page_permission() {
  return array(
    'access admin employer' => array(
      'title' => t('Access admin Employer'),
    ), 
		'access admin job seeker' => array(
      'title' => t('Access admin Job Seeker'),
    ),  
		'access admin job seeker add' => array(
      'title' => t('Access admin Job Seeker Add'),
    ),  
		'access admin job seeker edit' => array(
      'title' => t('Access admin Job Seeker Edit'),
    ),  
		'access admin job seeker export' => array(
      'title' => t('Access admin Job Seeker Export'),
    ), 
		'access admin applied job' => array(
      'title' => t('Access admin applied job'),
    ), 
		'access admin job' => array(
      'title' => t('Access admin job'),
    ), 
		'access other setting' => array(
      'title' => t('Access Other Setting'),
    ), 
		'access admin contact' => array(
      'title' => t('Access Admin Contact'),
    ), 
		'access admin applied_job_opening' => array(
      'title' => t('Access Admin Applied Job Opening'),
    )
  );
}

/**
 * Implements hook_theme().
 */
function admin_page_theme($existing, $type, $theme, $path) {
	return array(
		'employer_list' => array(
			'variables' => array('content' => NULL),
			'template' => 'employer_list',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'employer_detail' => array(
			'variables' => array('content' => NULL),
			'template' => 'employer_detail',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'job_seeker_list' => array(
			'variables' => array('content' => NULL),
			'template' => 'job_seeker_list',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'job_seeker_detail' => array(
			'variables' => array('content' => NULL),
			'template' => 'job_seeker_detail',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'job_list' => array(
			'variables' => array('content' => NULL),
			'template' => 'job_list',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'job_detail' => array(
			'variables' => array('content' => NULL),
			'template' => 'job_detail',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'contact_list' => array(
			'variables' => array('content' => NULL),
			'template' => 'contact_list',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'contact_detail' => array(
			'variables' => array('content' => NULL),
			'template' => 'contact_detail',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'applied_job_opening_list' => array(
			'variables' => array('content' => NULL),
			'template' => 'applied_job_opening_list',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'applied_job_opening_detail' => array(
			'variables' => array('content' => NULL),
			'template' => 'applied_job_opening_detail',
			'path' => drupal_get_path('module', 'admin_page')
		)
	);
}

function admin_employer(){
	$keyword = (empty($_GET['keyword'])) ? '' : " WHERE mail LIKE '%".$_GET['keyword']."%' OR name LIKE '%".$_GET['keyword']."%' OR first_name LIKE '%".$_GET['keyword']."%' OR last_name LIKE '%".$_GET['keyword']."%' ";
	$query_employers_total = "SELECT COUNT(uid) FROM users a 
		INNER JOIN conext_employer b ON a.uid = b.user_id".$keyword;
 	$employers_total = db_query($query_employers_total)->fetchField();
	
	// for paging
	$limit = 50;
	$pages = ceil($employers_total / $limit);
	$page = empty($_GET['page']) ? 1 : $_GET['page'];
	$offset = ($page - 1)  * $limit;
	
	$query_employers = "SELECT * FROM users a 
		INNER JOIN conext_employer b ON a.uid = b.user_id".$keyword." LIMIT ".$limit." OFFSET ".$offset;
 	$employers = db_query($query_employers);
	
	$content = array(
		'employers' => $employers,
		'pages' => $pages
	);
	
	//drupal_set_message('<pre>'.print_r($content, true).'</pre>');
	return theme('employer_list', array('content' => $content));
}

function admin_employer_detail(){
	$uid = arg(3);
	if (!empty($uid)) {
		$query_employer = "SELECT * FROM users a 
			INNER JOIN conext_employer b ON a.uid = b.user_id WHERE uid = :uid";
		$employer = db_query($query_employer, array('uid' => $uid));

		$content = array(
			'employer' => $employer
		);
	}
	return theme('employer_detail', array('content' => $content));
}

function admin_job_seeker(){
	global $base_url;
	
	$current_time = date('Y/m');
	//print $current_time; exit;
	if (empty($_GET['order'])) {
		$order = " ORDER BY a.created DESC ";
	} else {
		$order = " ORDER BY ".$_GET['order']." ".$_GET['sort'];
	}
		
	$keyword = (empty($_GET['keyword'])) ? '' : " WHERE mail LIKE '%".$_GET['keyword']."%' OR name LIKE '%".$_GET['keyword']."%' OR first_name LIKE '%".$_GET['keyword']."%' OR last_name LIKE '%".$_GET['keyword']."%' OR phone LIKE '%".$_GET['keyword']."%' OR address_street LIKE '%".$_GET['keyword']."%' OR address_country LIKE '%".$_GET['keyword']."%' OR address_province LIKE '%".$_GET['keyword']."%' OR address_zip LIKE '%".$_GET['keyword']."%' OR address_city LIKE '%".$_GET['keyword']."%' OR current_title LIKE '%".$_GET['keyword']."%' OR current_company LIKE '%".$_GET['keyword']."%' OR current_city LIKE '%".$_GET['keyword']."%' OR current_industry LIKE '%".$_GET['keyword']."%' OR education LIKE '%".$_GET['keyword']."%' OR graduation LIKE '%".$_GET['keyword']."%' OR major LIKE '%".$_GET['keyword']."%' OR education_city LIKE '%".$_GET['keyword']."%' OR nationality LIKE '%".$_GET['keyword']."%' OR about_yourself LIKE '%".$_GET['keyword']."%' OR industry_experience LIKE '%".$_GET['keyword']."%' ";
	
	$query_job_seekers_total = "SELECT COUNT(uid) FROM users a 
		INNER JOIN conext_job_seeker b ON a.uid = b.user_id".$keyword;
 	$job_seekers_total = db_query($query_job_seekers_total)->fetchField();
	
	// for paging
	$limit = 50;
	$pages = ceil($job_seekers_total / $limit);
	$page = empty($_GET['page']) ? 1 : $_GET['page'];
	$offset = ($page - 1)  * $limit;
	
	$query_job_seekers = "SELECT *,
		floor(DATEDIFF(concat(IF(current_work_end = 'present', '".$current_time."', current_work_end), '/28'), concat(current_work_start, '/28')) / 365) AS experience_year FROM users a 
		INNER JOIN conext_job_seeker b ON a.uid = b.user_id". $keyword . $order ." LIMIT ".$limit." OFFSET ".$offset;
 	$job_seekers = db_query($query_job_seekers);
	
	$job_seeker_url = (empty($_GET['keyword'])) ? $base_url.'/admin/job_seeker?keyword=' : $base_url.'/admin/job_seeker?keyword='.$_GET['keyword'];
	
	$content = array(
		'job_seekers' => $job_seekers,
		'pages' => $pages,
		'job_seeker_url' => $job_seeker_url
	);
	
	return theme('job_seeker_list', array('content' => $content));
}

function admin_job_seeker_detail(){
	$uid = arg(3);
	if (!empty($uid)) {
		$query_job_seeker = "SELECT * FROM users a 
			INNER JOIN conext_job_seeker b ON a.uid = b.user_id WHERE uid = :uid";
		$job_seeker = db_query($query_job_seeker, array('uid' => $uid));

		$content = array(
			'job_seeker' => $job_seeker
		);
	}
	return theme('job_seeker_detail', array('content' => $content));
}

function admin_job_seeker_add(){
	$output = drupal_get_form('admin_job_seeker_form');
	
	return $output;
}

function admin_job_seeker_edit($uid){
	$output = drupal_get_form('admin_job_seeker_form');
	
	return $output;
}

function admin_job_seeker_form($form, &$form_state) {
	global $base_url;
	$uid = arg(2);
	$arg3 = arg(3);
	
	if (!empty($uid)) {
		$query_job_seeker = "SELECT * FROM users a 
				INNER JOIN conext_job_seeker b ON a.uid = b.user_id WHERE uid = :uid";
		$job_seeker = db_query($query_job_seeker, array('uid' => $uid));
		foreach($job_seeker as $data) {
			$current_time = date('Y/m');
			$current_work_start = explode('/', $data->current_work_start);
			if ($data->current_work_end == 'present') {
				$current_work_end =  explode('/', $current_time);
				$current_work_present = 1;
			} else {
				$current_work_end =  explode('/', $data->current_work_end);
			}
			$industry_start = explode('/', $data->industry_start);
			if ($data->industry_end == 'present') {
				$industry_end =  explode('/', $current_time);
				$industry_present = 1;
			} else {
				$industry_end =  explode('/', $data->industry_end);
			}
			
			$current_city_exist = db_query("SELECT nama_kota FROM conext_kota WHERE nama_kota = '".$data->current_city."' LIMIT 1")->fetchField();
			$industries = get_term_list ('company_industry');
			$current_industry_exist = false;
			foreach($industries as $industry) {
				if ($industry['name'] == $data->current_industry) $current_industry_exist = true;
			}
			
			$email = $data->mail;
			$first_name = $data->first_name;
			$last_name = $data->last_name;
			$phone = $data->phone;
			$nationality = $data->nationality;
			$public_profile_url = $data->public_profile_url;
			$expected_salary = $data->expected_salary;
			$about_yourself = $data->about_yourself;
			$address_street = $data->address_street;
			$address_country = $data->address_country;
			$address_province = $data->address_province;
			$address_zip = $data->address_zip;
			$address_city = $data->address_city;
			$address_other_city = (is_city_exist($data->current_city)) ? '' : $data->current_city;
			$current_title = $data->current_title;
			$current_company = $data->current_company;
			$current_city = $data->current_city;
			$current_other_city = (empty($current_city_exist)) ? $current_city : '';
			$current_industry = $data->current_industry;
			$current_other_industry = ($current_industry_exist) ? '00' : $data->current_industry;
			$industry_experience = $data->industry_experience;
			$education = $data->education;
			$graduation = $data->graduation;
			$major = $data->major;
			$education_city = $data->education_city;
			$education_other_city = (is_city_exist($data->education_city)) ? '' : $data->education_city;
			$status = $data->status;
			$target_position = $data->target_position;
			$assessment = $data->assessment;
			$assessment_note = $data->assessment_note;
			$client_name = $data->client_name;
			$client_assessment = $data->client_assessment;
			$client_assessment_note = $data->client_assessment_note;
			$other_notes = $data->other_notes;
			$get_profile_from_other = $data->get_profile_from_other;
			$get_profile_from = (empty($get_profile_from_other)) ? $data->get_profile_from : 'Others';
			$cv = $data->cv;
			
			$expected_salary = explode('-', $expected_salary);
			if (empty($expected_salary[1])) {
				$expected_salary = $expected_salary[0];
			} else {
				$expected_salary = trim($expected_salary[0]).' - '.trim($expected_salary[1]);
			}
			
			if (!empty($industry_experience)) {
				$industry_experience = explode(' ', $industry_experience);
				$industry_experience_year = $industry_experience[0];
				$industry_experience_month = $industry_experience[2];
			}
		}
		
	}
	//drupal_set_message("<pre>".print_r($current_work_start, true)."</pre>");
	
	// generate dropdown options
	$months = conext_get_month();
	$month_options[''] = 'Please Select';
	foreach($months as $month) {
		$month_options[$month] = $month;
	}
	$years = conext_get_year();
	$year_options[''] = 'Please Select';
	foreach($years as $year) {
		$year_options[$year] = $year;
	}
	$expected_salaries = get_salary_range_v2();
	$expected_salary_options[''] = 'Please Select';
	foreach($expected_salaries as $salary) {
		$expected_salary_options[$salary] = $salary;
	}
	$industries = get_term_list ('company_industry');
	$industry_options[''] = 'Please Select';
	foreach($industries as $industry) {
		$industry_options[$industry['name']] = $industry['name'];
	}
	$cities = db_query("SELECT id, nama_kota FROM conext_kota");
	$city_options[''] = 'Please Select';
	foreach($cities as $city) {
		$city_options[$city->nama_kota] = $city->nama_kota;
	}
	$assessment_options = array('' => 'Not Set', 'Passed' => 'Passed', 'Not Passed' => 'Not Passed');
	$status_options = array(
		'' => 'Not Set',
		'Not Approached' => 'Not Approached', 
		'Not Operated' => 'Not Operated', 
		'Processed' => 'Processed', 
		'Hired' => 'Hired', 
		'Failed' => 'Failed'
		);
	$get_profile_from_options = array(
		'Email Recruitment' => 'Email Recruitment', 
		'Old Master Data' => 'Old Master Data', 
		'Linkedin' => 'Linkedin', 
		'Virda' => 'Virda', 
		'Ferina' => 'Ferina', 
		'Esiana' => 'Esiana', 
		'Janis' => 'Janis', 
		'Conext Site' => 'Conext Site', 
		'Others' => 'Others',
		'Master 2016' => 'Master 2016'
	);
	
	$form['uid'] = array(
		'#type' => 'hidden', 
		'#title' => 'UID',
		'#default_value' => ($uid == 'add') ? '' : $uid
	);
	// PERSONAL INFO
	$form['personal_info'] = array(
    '#type' => 'fieldset',
    '#title' => t('Personal Info'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['personal_info']['email'] = array(
		'#type' => 'textfield', 
		'#title' => 'Email Address',
		'#required' => true,
		'#default_value' => (empty($email)) ? '' : $email
	);
	$form['personal_info']['first_name'] = array(
		'#type' => 'textfield', 
		'#title' => 'First Name',
		'#required' => true,
		'#default_value' => (empty($first_name)) ? '' : $first_name
	);
	$form['personal_info']['last_name'] = array(
		'#type' => 'textfield', 
		'#title' => 'Last Name',
		'#default_value' => (empty($last_name)) ? '' : $last_name
	);
	$form['personal_info']['phone'] = array(
		'#type' => 'textfield', 
		'#title' => 'Phone',
		'#default_value' => (empty($phone)) ? '' : $phone
	);
	$form['personal_info']['nationality'] = array(
		'#type' => 'textfield', 
		'#title' => 'Nationality',
		'#default_value' => (empty($nationality)) ? '' : $nationality
	);
	$form['personal_info']['public_profile_url'] = array(
		'#type' => 'textfield', 
		'#title' => 'Linkedin Profile',
		'#default_value' => (empty($public_profile_url)) ? '' : $public_profile_url
	);
	$form['personal_info']['expected_salary'] = array(
		'#type' => 'select', 
		'#title' => 'Expected Salary',
		'#options' => $expected_salary_options,
		'#default_value' => (empty($expected_salary)) ? '' : $expected_salary
	);
	$form['personal_info']['about_yourself'] = array(
		'#type' => 'textarea', 
		'#title' => 'About Yourself',
		'#default_value' => (empty($about_yourself)) ? '' : $about_yourself
	);
	$form['personal_info']['cv_file'] = array(
		'#type' => 'file',
		'#title' => t('CV'),
		'#size' => 5,
		'#suffix' => (empty($cv)) ? '' : '<div><a target="_blank" href="'.file_create_url($cv).'">Latest CV ['.str_replace("public://cv/", "", $cv).']</a></div>',
		'#description' => t('Upload a file, allowed extensions: doc, pdf, docx'),
	);
	$form['cv_file_default'] = array(
		'#type' => 'hidden', 
		'#title' => 'CV file default',
		'#default_value' => (empty($cv)) ? '' : $cv
	);
	
	// ADDRESS
	$form['address'] = array(
    '#type' => 'fieldset',
    '#title' => t('Address'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['address']['address_street'] = array(
		'#type' => 'textfield', 
		'#title' => 'Street',
		'#default_value' => (empty($address_street)) ? '' : $address_street
	);
	$form['address']['address_country'] = array(
		'#type' => 'textfield', 
		'#title' => 'Country',
		'#default_value' => (empty($address_country)) ? '' : $address_country
	);
	$form['address']['address_province'] = array(
		'#type' => 'textfield', 
		'#title' => 'Province',
		'#default_value' => (empty($address_province)) ? '' : $address_province
	);
	$form['address']['address_zip'] = array(
		'#type' => 'textfield', 
		'#title' => 'Zip Code',
		'#default_value' => (empty($address_zip)) ? '' : $address_zip
	);
	$form['address']['address_city'] = array(
		'#type' => 'textfield', 
		'#title' => 'City',
		'#default_value' => (empty($address_city)) ? '' : $address_city
	);
	/*$form['address']['address_other_city'] = array(
		'#type' => 'textfield', 
		'#title' => 'Other City',
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($address_other_city)) ? '' : $address_other_city
	);*/
	
	// CURRENT WORK
	$form['current_work'] = array(
    '#type' => 'fieldset',
    '#title' => t('Current Work'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['current_work']['title'] = array(
		'#type' => 'textfield', 
		'#title' => 'Title',
		'#default_value' => (empty($current_title)) ? '' : $current_title
	);
	$form['current_work']['company'] = array(
		'#type' => 'textfield', 
		'#title' => 'Company',
		'#default_value' => (empty($current_company)) ? '' : $current_company
	);
	$form['current_work']['industry'] = array(
		'#type' => 'select', 
		'#title' => 'Industry',
		'#options' => $industry_options,
		'#default_value' => (empty($current_industry)) ? '' : $current_industry
	);
	$form['current_work']['current_other_industry'] = array(
		'#type' => 'textarea', 
		'#title' => 'Other Industry',
		'#default_value' => (empty($current_other_industry)) ? '' : $current_other_industry
	);
	$form['current_work']['current_city'] = array(
		'#type' => 'select', 
		'#title' => 'City',
		'#options' => $city_options,
		//'#prefix' => '<div style="float: left">',
		//'#suffix' => '</div>',
		'#default_value' => (empty($current_city)) ? '' : $current_city
	);
	$form['current_work']['current_other_city'] = array(
		'#type' => 'textarea', 
		'#title' => 'Other City',
		'#default_value' => (empty($current_other_city)) ? '' : $current_other_city
	);
	$form['current_work']['current_work'] = array(
    '#type' => 'fieldset',
    '#title' => t('Current Work Experience'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['current_work']['current_work']['start'] = array(
    '#type' => 'fieldset',
    '#title' => t('Work Start'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['current_work']['current_work']['start']['start_month'] = array(
		'#type' => 'select', 
		'#title' => 'Month',
		'#options' => $month_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($current_work_start)) ? '' : str_replace('0', '', $current_work_start[1])
	);
	$form['current_work']['current_work']['start']['start_year'] = array(
		'#type' => 'select', 
		'#title' => 'Year',
		'#options' => $year_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($current_work_start)) ? '' : $current_work_start[0]
	);
	$form['current_work']['current_work']['end'] = array(
    '#type' => 'fieldset',
    '#title' => t('Work End'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['current_work']['current_work']['end']['end_month'] = array(
		'#type' => 'select', 
		'#title' => 'Month',
		'#options' => $month_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($current_work_end)) ? '' : str_replace('0', '', $current_work_end[1])
	);
	$form['current_work']['current_work']['end']['end_year'] = array(
		'#type' => 'select', 
		'#title' => 'Year',
		'#options' => $year_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($current_work_end)) ? '' : $current_work_end[0]
	);
	$form['current_work']['current_work']['end']['current_work_present'] = array(
		'#type' => 'checkbox', 
		'#title' => 'Present',
		'#prefix' => '<div style="float: left; margin-top: 34px">',
		'#suffix' => '</div>',
		'#default_value' => (empty($current_work_present)) ? '' : $current_work_present
	);
	$form['current_work']['industry_experience_year'] = array(
		'#type' => 'textfield', 
		'#title' => 'Industry Experience',
		'#prefix' => '<div style="float: left;">',
		'#suffix' => 'Years</div>',
		'#size' => 30,
		'#default_value' => (empty($industry_experience_year)) ? '0' : $industry_experience_year
	);
	$form['current_work']['industry_experience_month'] = array(
		'#type' => 'textfield', 
		'#title' => '',
		'#prefix' => '<div style="float: left; margin-top: 32px">',
		'#suffix' => 'Months</div>',
		'#size' => 30,
		'#default_value' => (empty($industry_experience_month)) ? '0' : $industry_experience_month
	);
	/*
	$form['current_work']['industry'] = array(
    '#type' => 'fieldset',
    '#title' => t('Industry Experience'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
		'#weight' => 10
  );
	$form['current_work']['industry']['start'] = array(
    '#type' => 'fieldset',
    '#title' => t('Start'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['current_work']['industry']['start']['industry_start_month'] = array(
		'#type' => 'select', 
		'#title' => 'Month',
		'#options' => $month_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($industry_start)) ? '' : $industry_start[1]
	);
	$form['current_work']['industry']['start']['industry_start_year'] = array(
		'#type' => 'select', 
		'#title' => 'Year',
		'#options' => $year_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($industry_start)) ? '' : $industry_start[0]
	);
	$form['current_work']['industry']['end'] = array(
    '#type' => 'fieldset',
    '#title' => t('End'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['current_work']['industry']['end']['industry_end_month'] = array(
		'#type' => 'select', 
		'#title' => 'Month',
		'#options' => $month_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($industry_end)) ? '' : $industry_end[1]
	);
	$form['current_work']['industry']['end']['industry_end_year'] = array(
		'#type' => 'select', 
		'#title' => 'Year',
		'#options' => $year_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($industry_end)) ? '' : $industry_end[0]
	);
	$form['current_work']['industry']['end']['industry_present'] = array(
		'#type' => 'checkbox', 
		'#title' => 'Present',
		'#prefix' => '<div style="float: left; margin-top: 34px">',
		'#suffix' => '</div>',
		'#default_value' => (empty($industry_present)) ? '' : $industry_present
	);
	*/
	
	// Education
	$form['education'] = array(
    '#type' => 'fieldset',
    '#title' => t('Education'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['education']['education'] = array(
		'#type' => 'textfield', 
		'#title' => 'Institute',
		'#default_value' => (empty($education)) ? '' : $education
	);
	$form['education']['graduation'] = array(
		'#type' => 'select', 
		'#title' => 'Graduation',
		'#options' => $year_options,
		'#default_value' => (empty($graduation)) ? '' : $graduation
	);
	$form['education']['major'] = array(
		'#type' => 'textfield', 
		'#title' => 'Major',
		'#default_value' => (empty($major)) ? '' : $major
	);
	$form['education']['education_city'] = array(
		'#type' => 'select', 
		'#title' => 'City',
		'#options' => $city_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($education_city)) ? '' : $education_city
	);
	$form['education']['education_other_city'] = array(
		'#type' => 'textfield', 
		'#title' => 'Other City',
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($education_other_city)) ? '' : $education_other_city
	);
	
	// Conext Internal
	$form['conext'] = array(
    '#type' => 'fieldset',
    '#title' => t('Conext Internal'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['conext']['status'] = array(
		'#type' => 'select', 
		'#title' => 'Status',
		'#options' => $status_options,
		'#default_value' => (empty($status)) ? '' : $status
	);
	$form['conext']['target_position'] = array(
		'#type' => 'textfield', 
		'#title' => 'Target Position',
		'#default_value' => (empty($target_position)) ? '' : $target_position
	);
	$form['conext']['assessment'] = array(
		'#type' => 'select', 
		'#title' => 'Assessment',
		'#options' => $assessment_options,
		'#default_value' => (empty($assessment)) ? '' : $assessment
	);
	$form['conext']['assessment_note'] = array(
		'#type' => 'textarea', 
		'#title' => 'Assessment Note',
		'#default_value' => (empty($assessment_note)) ? '' : $assessment_note
	);
	$form['conext']['client_name'] = array(
		'#type' => 'textfield', 
		'#title' => 'client Name',
		'#default_value' => (empty($client_name)) ? '' : $client_name
	);
	$form['conext']['client_assessment'] = array(
		'#type' => 'select', 
		'#title' => 'Client Assessment',
		'#options' => $assessment_options,
		'#default_value' => (empty($client_assessment)) ? '' : $client_assessment
	);
	$form['conext']['client_assessment_note'] = array(
		'#type' => 'textarea', 
		'#title' => 'Client Assessment Note',
		'#default_value' => (empty($client_assessment_note)) ? '' : $client_assessment_note
	);
	$form['conext']['other_notes'] = array(
		'#type' => 'textarea', 
		'#title' => 'Other Note',
		'#default_value' => (empty($other_notes)) ? '' : $other_notes
	);
	$form['conext']['get_profile_from'] = array(
		'#type' => 'select', 
		'#title' => 'Get Profile From',
		'#options' => $get_profile_from_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($get_profile_from)) ? '' : $get_profile_from
	);
	$form['conext']['get_profile_from_other'] = array(
		'#type' => 'textfield', 
		'#title' => 'Other',
		'#default_value' => (empty($get_profile_from_other)) ? '' : $get_profile_from_other
	);
	
	/*$form['submit'] = array(
		'#type' => 'submit', 
		'#title' => 'Submit',
		'#value' => 'Submit',
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
	);
	$form['cancel'] = array(
		'#type' => 'button',
		'#value' => t('Cancel'),
		'#prefix' => '<a href="'.$base_url.'/admin/job_seeker">',
		'#suffix' => '</div>',
	);*/
	if (valid_user_role(CONEXT_ADMIN_ROLE_ID) || valid_user_role(CONEXT_SUPER_ADMIN_ROLE_ID) || valid_user_role(0) || valid_user_role(3)) {
		return confirm_form($form, '', 'admin/job_seeker', '', t('Save'), t('Cancel'));
	} else {
		return $form; 
	}   
}

function admin_job_seeker_form_validate($form, &$form_state) {
  $file = file_save_upload('cv_file', array(
  	'file_validate_extensions' => array('doc docx pdf'),
  ));
  if ($file) {
    if ($file = file_move($file, 'public://cv')) {
      $form_state['values']['file'] =  $file;
    }
    else {
      form_set_error('file', t('Failed to write the uploaded file the site\'s file folder.'));
    }
  }
}

function admin_job_seeker_form_submit($form, &$form_state) {
	$params = array(
		'uid' => $form['uid']['#value'],
		'email_address' => $form['personal_info']['email']['#value'],
		'first_name' => $form['personal_info']['first_name']['#value'],
		'last_name' => $form['personal_info']['last_name']['#value'],
		'phone' => $form['personal_info']['phone']['#value'],
		'nationality' => $form['personal_info']['nationality']['#value'],
		'expected_salary' => $form['personal_info']['expected_salary']['#value'],
		'about_yourself' => $form['personal_info']['about_yourself']['#value'],
		'address_street' => $form['address']['address_street']['#value'],
		'address_country' => $form['address']['address_country']['#value'],
		'address_province' => $form['address']['address_province']['#value'],
		'address_zip' => $form['address']['address_zip']['#value'],
		'address_city' => $form['address']['address_city']['#value'],
		//'address_other_city' => $form['address']['address_other_city']['#value'],
		'current_title' => $form['current_work']['title']['#value'],
		'current_company' => $form['current_work']['company']['#value'],
		'work_month_start' => $form['current_work']['current_work']['start']['start_month']['#value'], 
		'work_year_start' => $form['current_work']['current_work']['start']['start_year']['#value'],
		'work_month_end' => $form['current_work']['current_work']['end']['end_month']['#value'], 
		'work_year_end' => $form['current_work']['current_work']['end']['end_year']['#value'],
		'current_work_present' => $form['current_work']['current_work']['end']['current_work_present']['#value'],
		'industry_work_month_start' => (empty($form['current_work']['industry']['start'])) ? '' : $form['current_work']['industry']['start']['industry_start_month']['#value'], 
		'industry_work_year_start' => (empty($form['current_work']['industry']['start'])) ? '' : $form['current_work']['industry']['start']['industry_start_year']['#value'],
		'industry_work_month_end' => (empty($form['current_work']['industry']['end'])) ? '' : $form['current_work']['industry']['end']['industry_end_month']['#value'], 
		'industry_work_year_end' => (empty($form['current_work']['industry']['end'])) ? '' : $form['current_work']['industry']['end']['industry_end_year']['#value'],
		'industry_present' => (empty($form['current_work']['industry']['end'])) ? '' : $form['current_work']['industry']['end']['industry_present']['#value'],
		'current_city' => $form['current_work']['current_city']['#value'],
		'current_other_city' => $form['current_work']['current_other_city']['#value'],
		'current_industry' => $form['current_work']['industry']['#value'],
		'industry_experience_year' => $form['current_work']['industry_experience_year']['#value'],
		'industry_experience_month' => $form['current_work']['industry_experience_month']['#value'],
		'education' => $form['education']['education']['#value'],
		'graduation' => $form['education']['graduation']['#value'],
		'major' => $form['education']['major']['#value'],
		'education_city' => $form['education']['education_city']['#value'],
		'education_other_city' => $form['education']['education_other_city']['#value'],
		'email' => $form['personal_info']['email']['#value'],
		'public_profile_url' => $form['personal_info']['public_profile_url']['#value'],
		'status' => $form['conext']['status']['#value'],
		'target_position' => $form['conext']['target_position']['#value'],
		'assessment' => $form['conext']['assessment']['#value'],
		'assessment_note' => $form['conext']['assessment_note']['#value'],
		'client_name' => $form['conext']['client_name']['#value'],
		'client_assessment' => $form['conext']['client_assessment']['#value'],
		'client_assessment_note' => $form['conext']['client_assessment_note']['#value'],
		'other_notes' => $form['conext']['other_notes']['#value'],
		'get_profile_from' => $form['conext']['get_profile_from']['#value'],
		'get_profile_from_other' => $form['conext']['get_profile_from_other']['#value'],
		'cv' => (empty($form_state['values']['file']->uri)) ? $form_state['values']['cv_file_default'] : $form_state['values']['file']->uri
	);
	
	//drupal_set_message("<pre>".print_r($params, true)."</pre>");
	
	if (empty($form['uid']['#value'])) { // insert
		admin_insert_job_seeker($params);
	} else { // update
		admin_edit_job_seeker($params);
	}
}

function admin_insert_job_seeker($params) {
	global $user;
	if (user_load_by_mail($params['email_address'])) { // email exist
		drupal_set_message('Email '.$params['email_address'].' Exists', 'error');
	} else {
		// create user node
		$new_user = array(
			'name' => $params['email_address'],
			'pass' => '123456',
			'mail' => $params['email_address'],
			'status' => 1,
			'init' => 'Email',
			'roles' => array(DRUPAL_AUTHENTICATED_RID => 'authenticated user')
		);
		$account = user_save(NULL, $new_user);

		$education_city = (empty($params['education_other_city'])) ? $params['education_city'] : $params['education_other_city'];
		$last_work_city = (empty($params['current_other_city'])) ? $params['current_city'] : $params['current_other_city'];
		
		$current_work_start = (empty($params['work_month_start']) && empty($params['work_year_start'])) ? '' : $params['work_year_start'].'/'.$params['work_month_start'];
		if (empty($params['current_work_present']))
			$current_work_end = (empty($params['work_month_end']) && empty($params['work_year_end'])) ? '' : $params['work_year_end'].'/'.$params['work_month_end'];
		else
			$current_work_end = 'present';
		
		$industry_start = (empty($params['industry_work_month_start']) && empty($params['industry_work_year_start'])) ? '' : $params['industry_work_year_start'].'/'.$params['industry_work_month_start'];
		if ($params['current_work_present'] == 0)
			$industry_end = (empty($params['industry_work_month_end']) && empty($params['industry_work_year_end'])) ? '' : $params['industry_work_year_end'].'/'.$params['industry_work_month_end'];
		else
			$industry_end = 'present';
		
		if (empty($params['industry_experience']))
			$industry_experience = $params['industry_experience_year'].' years '.$params['industry_experience_month'].' months';
		else
			$industry_experience = $params['industry_experience'];

		$query = "INSERT INTO {conext_job_seeker} (user_id, first_name, last_name, phone, address_street, address_country, 
				address_province, address_zip, address_city, current_title, current_company, current_work_start, current_work_end, 
				industry_start, industry_end, current_city, current_industry, education, graduation, major, education_city, nationality, 
				public_profile_url, expected_salary, about_yourself, email, status, target_position, assessment, assessment_note, client_name, 
				client_assessment, client_assessment_note, other_notes, get_profile_from, get_profile_from_other, cv, industry_experience, updated_by, created_at, updated_at)
			VALUES (:user_id, :first_name, :last_name, :phone, :address_street, :address_country, :address_province, 
				:address_zip, :address_city, :current_title, :current_company, :current_work_start, :current_work_end, :industry_start, 
				:industry_end, :current_city, :current_industry, :education, :graduation, :major, :education_city, :nationality, 
				:public_profile_url, :expected_salary, :about_yourself, :email, :status, :target_position, :assessment, 
				:assessment_note, :client_name, :client_assessment, :client_assessment_note, :other_notes, :get_profile_from, 
				:get_profile_from_other, :cv, :industry_experience, :updated_by, NOW(), NOW())";
		db_query($query, array( 
			'user_id' => $account->uid,
			'first_name' => $params['first_name'],
			'last_name' => $params['last_name'],
			'phone' => $params['phone'],
			'address_street' => $params['address_street'],
			'address_country' => $params['address_country'],
			'address_province' => $params['address_province'],
			'address_zip' => $params['address_zip'],
			'address_city' => $params['address_city'],
			'current_title' => $params['current_title'],
			'current_company' => $params['current_company'],
			'current_work_start' => $current_work_start, 
			'current_work_end' => $current_work_end,
			'industry_start' => $industry_start, 
			'industry_end' => $industry_end,
			'current_city' => $last_work_city,
			'current_industry' => $params['current_industry'],
			'education' => $params['education'],
			'graduation' => $params['graduation'],
			'major' => $params['major'],
			'education_city' => $education_city,
			'nationality' => $params['nationality'],
			'expected_salary' => $params['expected_salary'],
			'about_yourself' => $params['about_yourself'],
			'email' => $params['email_address'],
			'public_profile_url' => $params['public_profile_url'],
			'status' => $params['status'],
			'target_position' => $params['target_position'],
			'assessment' => $params['assessment'],
			'assessment_note' => $params['assessment_note'],
			'client_name' => $params['client_name'],
			'client_assessment' => $params['client_assessment'],
			'client_assessment_note' => $params['client_assessment_note'],
			'other_notes' => $params['other_notes'],
			'get_profile_from' => (empty($params['get_profile_from_other'])) ? $params['get_profile_from'] : 'Others',
			'get_profile_from_other' => $params['get_profile_from_other'],
			'cv' => $params['cv'],
			'industry_experience' => $industry_experience,
			'updated_by' => (!empty($params['updated_by'])) ? $params['updated_by'] : $user->name
		));
		drupal_set_message("Job Seeker Insert Successfully", "notice");
	}
}

function admin_edit_job_seeker($params) {
	global $user;

	$existing_user = user_load($params['uid']);
	$edit = array(
		'name' => $params['email_address'],
		'mail' => $params['email_address'],
	);
	user_save($existing_user, $edit);

	$education_city = (empty($params['education_other_city'])) ? $params['education_city'] : $params['education_other_city'];
	$last_work_city = (empty($params['current_other_city'])) ? $params['current_city'] : $params['current_other_city'];
	
	$current_work_start = (empty($params['work_month_start']) && empty($params['work_year_start'])) ? '' : $params['work_year_start'].'/'.$params['work_month_start'];
	if (empty($params['current_work_present']))
		$current_work_end = (empty($params['work_month_end']) && empty($params['work_year_end'])) ? '' : $params['work_year_end'].'/'.$params['work_month_end'];
	else
		$current_work_end = 'present';

	$industry_start = (empty($params['industry_work_month_start']) && empty($params['industry_work_year_start'])) ? '' : $params['industry_work_year_start'].'/'.$params['industry_work_month_start'];
	if ($params['industry_present'] == 0)
		$industry_end = (empty($params['industry_work_month_end']) && empty($params['industry_work_year_end'])) ? '' : $params['industry_work_year_end'].'/'.$params['industry_work_month_end'];
	else
		$industry_end = 'present';
	
	$industry_experience = $params['industry_experience_year'].' years '.$params['industry_experience_month'].' months';

	$query = "UPDATE {conext_job_seeker} SET
		first_name=:first_name, last_name=:last_name, phone=:phone, address_street=:address_street, address_country=:address_country, 
		address_province=:address_province, address_zip=:address_zip, address_city=:address_city,
		current_title=:current_title, current_company=:current_company, current_work_start=:current_work_start, current_work_end=:current_work_end,
		industry_start=:industry_start, industry_end=:industry_end, current_city=:current_city, current_industry=:current_industry, education=:education, 
		graduation=:graduation, major=:major, education_city=:education_city, nationality=:nationality, expected_salary=:expected_salary, about_yourself=:about_yourself, 
		email=:email, public_profile_url=:public_profile_url, status=:status, target_position=:target_position, assessment=:assessment, assessment_note=:assessment_note,  
		client_name=:client_name, client_assessment=:client_assessment, client_assessment_note=:client_assessment_note, other_notes=:other_notes, 
		get_profile_from=:get_profile_from, get_profile_from_other=:get_profile_from_other, cv=:cv, industry_experience=:industry_experience, updated_by=:updated_by, updated_at=NOW()
		WHERE user_id=:user_id";
	db_query($query, array( 
		'first_name' => $params['first_name'],
		'last_name' => $params['last_name'],
		'phone' => $params['phone'],
		'address_street' => $params['address_street'],
		'address_country' => $params['address_country'],
		'address_province' => $params['address_province'],
		'address_zip' => $params['address_zip'],
		'address_city' => $params['address_city'],
		'current_title' => $params['current_title'],
		'current_company' => $params['current_company'],
		'current_work_start' => $current_work_start, 
		'current_work_end' => $current_work_end,
		'industry_start' => $industry_start, 
		'industry_end' => $industry_end,
		'current_city' => $last_work_city,
		'current_industry' => $params['current_industry'],
		'education' => $params['education'],
		'graduation' => $params['graduation'],
		'major' => $params['major'],
		'education_city' => $education_city,
		'nationality' => $params['nationality'],
		'expected_salary' => $params['expected_salary'],
		'about_yourself' => $params['about_yourself'],
		'email' => $params['email_address'],
		'public_profile_url' => $params['public_profile_url'],
		'status' => $params['status'],
		'target_position' => $params['target_position'],
		'assessment' => $params['assessment'],
		'assessment_note' => $params['assessment_note'],
		'client_name' => $params['client_name'],
		'client_assessment' => $params['client_assessment'],
		'client_assessment_note' => $params['client_assessment_note'],
		'other_notes' => $params['other_notes'],
		'get_profile_from' => (empty($params['get_profile_from_other'])) ? $params['get_profile_from'] : 'Others',
		'get_profile_from_other' => $params['get_profile_from_other'],
		'cv' => $params['cv'],
		'industry_experience' => $industry_experience,
		'updated_by' => (!empty($params['updated_by'])) ? $params['updated_by'] : $user->name,
		'user_id' => $params['uid']
	));
	drupal_set_message("Job Seeker Update Successfully", "notice");
}

function admin_job(){
	if (empty($_GET['order'])) {
		$order = " ORDER BY a.created DESC ";
	} else {
		$order = " ORDER BY ".$_GET['order']." ".$_GET['sort'];
	}
	
	$keyword = (empty($_GET['keyword'])) ? '' : " WHERE a.title LIKE '%".$_GET['keyword']."%' OR b.title LIKE '%".$_GET['keyword']."%'";
	$query_jobs_total = "SELECT COUNT(nid) FROM node a 
		INNER JOIN conext_job b ON a.nid = b.drupal_job_id".$keyword;
 	$jobs_total = db_query($query_jobs_total)->fetchField();
	
	// for paging
	$limit = 50;
	$pages = ceil($query_jobs_total / $limit);
	$page = empty($_GET['page']) ? 1 : $_GET['page'];
	$offset = ($page - 1)  * $limit;
	
	$query_jobs = "SELECT *, e.name as industry, (SELECT COUNT(id) as total_applied FROM conext_job_applied WHERE job_id = b.drupal_job_id) as total_applied FROM node a 
		INNER JOIN conext_job b ON a.nid = b.drupal_job_id
		LEFT JOIN conext_employer d ON b.employer_id = d.user_id
		LEFT JOIN taxonomy_term_data e ON b.industry = e.tid"
		. $keyword . $order . " LIMIT ".$limit." OFFSET ".$offset;
 	$jobs = db_query($query_jobs);
	
	$job_url = (empty($_GET['keyword'])) ? $base_url.'/admin/job?keyword=' : $base_url.'/admin/job?keyword='.$_GET['keyword'];
	
	$content = array(
		'jobs' => $jobs,
		'pages' => $pages,
		'job_url' => $job_url
	);
	
	return theme('job_list', array('content' => $content));
}

function admin_job_detail(){
	$nid = arg(3);
	$job_list = array();
	
	if ($_POST) {
		$job_status = $_POST['job_status'];
		$query_update = "UPDATE conext_job SET job_status = :job_status WHERE drupal_job_id = :drupal_job_id";
		db_query($query_update, array('job_status' => $job_status, 'drupal_job_id' => $nid));
		drupal_set_message('Updated Successfully');
	}
	
	$query_job = "SELECT * FROM node a 
		INNER JOIN conext_job b ON a.nid = b.drupal_job_id WHERE nid = :nid LIMIT 1";
 	$jobs = db_query($query_job, array('nid' => $nid));
	
	foreach($jobs as $job) {
		//$qualification = taxonomy_term_load($job->qualification);
		//$qualification_name = $qualification->name;
		
		$industry = taxonomy_term_load($job->industry);
		$industry_name = $industry->name;
		
		$employer = db_query('SELECT mail FROM users WHERE uid = '.$job->employer_id)->fetchField();
		$job_seekers = db_query('SELECT user_id, first_name, last_name FROM conext_job_applied a LEFT JOIN conext_job_seeker b ON a.job_seeker_id = b.user_id WHERE job_id = '.$job->drupal_job_id);
		
		$job_list = array(
			'nid' => $nid,
			'employer' => $employer,
			'title' => $job->title,
			'location' => $job->location,
			//'qualification' => $qualification_name,
			'qualification' => $job->qualification,
			'salary_range' => $job->salary_range,
			'industry' => $industry_name,
			'requirement' => $job->requirement,
			'responsibility' => $job->responsibility,
			'short_description' => $job->short_description,
			'benefit' => $job->benefit,
			'publish_job_public' => $job->publish_job_public,
			'job_status' => $job->job_status,
			'job_types' => $job->job_type,
			'created_at' => $job->created_at,
			'job_seekers' => $job_seekers
		);
	}
	
	$content = array(
		'job' => $job_list
	);
	
	return theme('job_detail', array('content' => $content));
}

function admin_contact(){
	$keyword = (empty($_GET['keyword'])) ? '' : " WHERE name LIKE '%".$_GET['keyword']."%' OR email LIKE '%".$_GET['keyword']."%' OR subject LIKE '%".$_GET['keyword']."%' OR message LIKE '%".$_GET['keyword']."%' OR company LIKE '%".$_GET['keyword']."%' ";
	$query_contact_total = "SELECT COUNT(id) FROM conext_contact ".$keyword;
 	$job_contact_total = db_query($query_contact_total)->fetchField();
	
	// for paging
	$limit = 50;
	$pages = ceil($job_contact_total / $limit);
	$page = empty($_GET['page']) ? 1 : $_GET['page'];
	$offset = ($page - 1)  * $limit;
	
	$query_contacts = "SELECT * FROM conext_contact ".$keyword." LIMIT ".$limit." OFFSET ".$offset;
 	$contacts = db_query($query_contacts);
	
	$content = array(
		'contacts' => $contacts,
		'pages' => $pages
	);
	
	return theme('contact_list', array('content' => $content));
}

function admin_contact_detail(){
	$id = arg(3);
	if (!empty($id)) {
		$query_contact = "SELECT * FROM conext_contact WHERE id = :id";
		$contact = db_query($query_contact, array('id' => $id));

		$content = array(
			'contact' => $contact
		);
	}
	return theme('contact_detail', array('content' => $content));
}

function admin_applied_job_opening(){
	$keyword = (empty($_GET['keyword'])) ? '' : " AND title LIKE '%".$_GET['keyword']."%' ";
	$query_job_applied_total = "SELECT COUNT(nid) FROM node a LEFT JOIN field_data_field_job_applied b ON a.nid=b.entity_id  WHERE type = 'conext_job_applied' ".$keyword;
 	$job_applied_total = db_query($query_job_applied_total)->fetchField();
	
	// for paging
	$limit = 50;
	$pages = ceil($job_applied_total / $limit);
	$page = empty($_GET['page']) ? 1 : $_GET['page'];
	$offset = ($page - 1)  * $limit;
	
	$query_job_applieds = "SELECT nid, title, field_job_applied_value FROM node a LEFT JOIN field_data_field_job_applied b ON a.nid=b.entity_id WHERE type = 'conext_job_applied' ".$keyword." ORDER BY nid DESC LIMIT ".$limit." OFFSET ".$offset;
 	$job_applieds = db_query($query_job_applieds);
	
	$content = array(
		'contacts' => $job_applieds,
		'pages' => $pages
	);
	
	return theme('applied_job_opening_list', array('content' => $content));
}

function admin_applied_job_opening_detail(){
	$nid = arg(3);
	if (!empty($nid)) {
		$job_applied = node_load($nid);

		$content = array(
			'job_applied' => $job_applied
		);
	}
	return theme('applied_job_opening_detail', array('content' => $content));
}

function admin_job_seeker_export() {
	require 'sites/all/libraries/PHPExcel/Classes/PHPExcel.php';
	$objPHPExcel = new PHPExcel(); 
	$objPHPExcel->setActiveSheetIndex(0); 

	$rowCount = 3; 
	$horizontal_style = array('horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
	// SET HEADER - START
	$objPHPExcel->getActiveSheet()->SetCellValue('A1','Input Date');
	$objPHPExcel->getActiveSheet()->mergeCells('A1:A2');
	$objPHPExcel->getActiveSheet()->SetCellValue('B1','No.');
	$objPHPExcel->getActiveSheet()->mergeCells('B1:B2');
	$objPHPExcel->getActiveSheet()->SetCellValue('C1','Candidata Name (First Name)');
	$objPHPExcel->getActiveSheet()->mergeCells('C1:C2');
	$objPHPExcel->getActiveSheet()->SetCellValue('D1','Candidata Name (Last Name)');
	$objPHPExcel->getActiveSheet()->mergeCells('D1:D2');
	$objPHPExcel->getActiveSheet()->SetCellValue('E1','Email Address');
	$objPHPExcel->getActiveSheet()->mergeCells('E1:E2');
	$objPHPExcel->getActiveSheet()->SetCellValue('F1','Phone');
	$objPHPExcel->getActiveSheet()->mergeCells('F1:F2');
	// Address
	$objPHPExcel->getActiveSheet()->SetCellValue('G1','Address');
	$objPHPExcel->getActiveSheet()->mergeCells('G1:J1');
  $objPHPExcel->getActiveSheet()->getStyle('G1:J1')->getAlignment()->applyFromArray($horizontal_style);
	$objPHPExcel->getActiveSheet()->SetCellValue('G2','Street Name');
	$objPHPExcel->getActiveSheet()->SetCellValue('H2','Province');
	$objPHPExcel->getActiveSheet()->SetCellValue('I2','Country');
	$objPHPExcel->getActiveSheet()->SetCellValue('J2','Zip Code');
	// Current Position
	$objPHPExcel->getActiveSheet()->SetCellValue('K1','Current Position');
	$objPHPExcel->getActiveSheet()->mergeCells('K1:O1');
  $objPHPExcel->getActiveSheet()->getStyle('K1:O1')->getAlignment()->applyFromArray($horizontal_style);
	$objPHPExcel->getActiveSheet()->SetCellValue('K2','Title');
	$objPHPExcel->getActiveSheet()->SetCellValue('L2','Company Name');
	$objPHPExcel->getActiveSheet()->SetCellValue('M2','Start Work (MM/YYYY)');
	$objPHPExcel->getActiveSheet()->SetCellValue('N2','End Work (MM/YYYY)');
	$objPHPExcel->getActiveSheet()->SetCellValue('O2','Location - city');
	$objPHPExcel->getActiveSheet()->SetCellValue('P2','Industry');
	// Years of Experience
	$objPHPExcel->getActiveSheet()->SetCellValue('Q1','Years of Experience');
	$objPHPExcel->getActiveSheet()->mergeCells('Q1:Q2');
	// Salary Expectation
	$objPHPExcel->getActiveSheet()->SetCellValue('R1','Salary Expectation (Per month)');
	$objPHPExcel->getActiveSheet()->mergeCells('R1:R2');
	// Highest Education
	$objPHPExcel->getActiveSheet()->SetCellValue('S1','Highest Education');
	$objPHPExcel->getActiveSheet()->mergeCells('S1:V1');
  $objPHPExcel->getActiveSheet()->getStyle('S1:V1')->getAlignment()->applyFromArray($horizontal_style);
	$objPHPExcel->getActiveSheet()->SetCellValue('S2','School Name');
	$objPHPExcel->getActiveSheet()->SetCellValue('T2','Graduation Time');
	$objPHPExcel->getActiveSheet()->SetCellValue('U2','Major');
	$objPHPExcel->getActiveSheet()->SetCellValue('V2','Location - city');
	// Nationality
	$objPHPExcel->getActiveSheet()->SetCellValue('W1','Nationality');
	$objPHPExcel->getActiveSheet()->mergeCells('W1:W2');
	$objPHPExcel->getActiveSheet()->SetCellValue('X1','Status');
	$objPHPExcel->getActiveSheet()->mergeCells('X1:X2');
	$objPHPExcel->getActiveSheet()->SetCellValue('Y1','Target Position');
	$objPHPExcel->getActiveSheet()->mergeCells('Y1:Y2');
	$objPHPExcel->getActiveSheet()->SetCellValue('Z1','Conext Assessment');
	$objPHPExcel->getActiveSheet()->mergeCells('Z1:Z2');
	$objPHPExcel->getActiveSheet()->SetCellValue('AA1','Conext Assessment Note');
	$objPHPExcel->getActiveSheet()->mergeCells('AA1:AA2');
	$objPHPExcel->getActiveSheet()->SetCellValue('AB1','Client Name');
	$objPHPExcel->getActiveSheet()->mergeCells('AB1:AB2');
	$objPHPExcel->getActiveSheet()->SetCellValue('AC1','Client Assessment');
	$objPHPExcel->getActiveSheet()->mergeCells('AC1:AC2');
	$objPHPExcel->getActiveSheet()->SetCellValue('AD1','Client Assessment Note');
	$objPHPExcel->getActiveSheet()->mergeCells('AD1:AD2');
	$objPHPExcel->getActiveSheet()->SetCellValue('AE1','Other Notes');
	$objPHPExcel->getActiveSheet()->mergeCells('AE1:AE2');
	$objPHPExcel->getActiveSheet()->SetCellValue('AF1','Get Profile From');
	$objPHPExcel->getActiveSheet()->mergeCells('AF1:AF2');
	// SET HEADER - END
	
	// SET CONTENT - START
	//$keyword = (empty($_GET['keyword'])) ? '' : " WHERE mail LIKE '%".$_GET['keyword']."%' OR name LIKE '%".$_GET['keyword']."%' OR first_name LIKE '%".$_GET['keyword']."%' OR last_name LIKE '%".$_GET['keyword']."%' ";
	$job_seeker_ids = implode("','", $_POST['job_seeker_ids']);
	$query_job_seekers = "SELECT * FROM users a 
		INNER JOIN conext_job_seeker b ON a.uid = b.user_id WHERE user_id IN ('".$job_seeker_ids."')";
 	$job_seekers = db_query($query_job_seekers);
	$current_time = date('Y/m');
	
	foreach($job_seekers as $job_seeker) {
		// get experience years
		$experience_year = '-';
		$experience_month = ' ';
		if (!empty($job_seeker->current_work_start) && !empty($job_seeker->current_work_end)) {
			$current_work_start = explode('/', $job_seeker->current_work_start);
			$current_work_end = explode('/', ($job_seeker->current_work_end == 'present') ? $current_time : $job_seeker->current_work_end);
			$work_start = new DateTime($current_work_start[0].'-'.$current_work_start[1].'-28');
			$work_end = new DateTime($current_work_end[0].'-'.$current_work_end[1].'-28');
			$day_diff = $work_start->diff($work_end);
			$experience_year = floor($day_diff->days / 365).' years';
			$experience_month .= floor(($day_diff->days - ($experience_year * 365)) / 30).' months';
			
			$work_start_view = date('M-y', strtotime($current_work_start[0].'-'.$current_work_start[1].'-28'));
			$work_end_view = ($job_seeker->current_work_end == 'present') ? $job_seeker->current_work_end : date('M-y', strtotime($current_work_end[0].'-'.$current_work_end[1].'-28'));
		}
		// salary expectation
		//$expected_salary = (empty($job_seeker->expected_salary)) ? '-' : format_salary($job_seeker->expected_salary);
		$expected_salary = (empty($job_seeker->expected_salary)) ? '-' : $job_seeker->expected_salary;
		
		$objPHPExcel->getActiveSheet()->SetCellValue('A'.$rowCount, $job_seeker->created_at);
		$objPHPExcel->getActiveSheet()->SetCellValue('B'.$rowCount, $rowCount-2);
		$objPHPExcel->getActiveSheet()->SetCellValue('C'.$rowCount, $job_seeker->first_name);
		$objPHPExcel->getActiveSheet()->SetCellValue('D'.$rowCount, $job_seeker->last_name);
		$objPHPExcel->getActiveSheet()->SetCellValue('E'.$rowCount, $job_seeker->mail);
		$objPHPExcel->getActiveSheet()->SetCellValue('F'.$rowCount, $job_seeker->phone);
		$objPHPExcel->getActiveSheet()->SetCellValue('G'.$rowCount, $job_seeker->address_street);
		$objPHPExcel->getActiveSheet()->SetCellValue('H'.$rowCount, $job_seeker->address_province);
		$objPHPExcel->getActiveSheet()->SetCellValue('I'.$rowCount, $job_seeker->address_country);
		$objPHPExcel->getActiveSheet()->SetCellValue('J'.$rowCount, $job_seeker->address_zip);
		$objPHPExcel->getActiveSheet()->SetCellValue('K'.$rowCount, $job_seeker->current_title);
		$objPHPExcel->getActiveSheet()->SetCellValue('L'.$rowCount, $job_seeker->current_company);
		$objPHPExcel->getActiveSheet()->SetCellValue('M'.$rowCount, $work_start_view);
		$objPHPExcel->getActiveSheet()->SetCellValue('N'.$rowCount, $work_end_view);
		$objPHPExcel->getActiveSheet()->SetCellValue('O'.$rowCount, $job_seeker->current_city);
		$objPHPExcel->getActiveSheet()->SetCellValue('P'.$rowCount, $job_seeker->current_industry);
		$objPHPExcel->getActiveSheet()->SetCellValue('Q'.$rowCount, $job_seeker->industry_experience);
		$objPHPExcel->getActiveSheet()->SetCellValue('R'.$rowCount, $expected_salary);
		$objPHPExcel->getActiveSheet()->SetCellValue('S'.$rowCount, $job_seeker->education);
		$objPHPExcel->getActiveSheet()->SetCellValue('T'.$rowCount, $job_seeker->graduation);
		$objPHPExcel->getActiveSheet()->SetCellValue('U'.$rowCount, $job_seeker->major);
		$objPHPExcel->getActiveSheet()->SetCellValue('V'.$rowCount, $job_seeker->education_city);
		$objPHPExcel->getActiveSheet()->SetCellValue('W'.$rowCount, $job_seeker->nationality);
		$objPHPExcel->getActiveSheet()->SetCellValue('X'.$rowCount, $job_seeker->status);
		$objPHPExcel->getActiveSheet()->SetCellValue('Y'.$rowCount, $job_seeker->target_position);
		$objPHPExcel->getActiveSheet()->SetCellValue('Z'.$rowCount, $job_seeker->assessment);
		$objPHPExcel->getActiveSheet()->SetCellValue('AA'.$rowCount, $job_seeker->assessment_note);
		$objPHPExcel->getActiveSheet()->SetCellValue('AB'.$rowCount, $job_seeker->client_name);
		$objPHPExcel->getActiveSheet()->SetCellValue('AC'.$rowCount, $job_seeker->client_assessment);
		$objPHPExcel->getActiveSheet()->SetCellValue('AD'.$rowCount, $job_seeker->client_assessment_note);
		$objPHPExcel->getActiveSheet()->SetCellValue('AE'.$rowCount, $job_seeker->other_notes);
		$objPHPExcel->getActiveSheet()->SetCellValue('AF'.$rowCount, $job_seeker->get_profile_from);
		$rowCount++;
	}
	// SET CONTENT - END
	
	$objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel);
	$filename = 'conext_jobseeker.xlsx';
	header('Content-Type: application/vnd.ms-excel');
	header('Content-Disposition: attachment;filename="'.$filename.'"');
	header('Cache-Control: max-age=0');
	$objWriter->save('php://output');
}

function admin_job_seeker_import() {
	module_load_include('inc', 'phpexcel');
  // The path to the excel file
  $path = 'sites/default/files/Conext Candidate_Master Template_DB.xls';	
  $result = phpexcel_import($path);
	//$cur = date('m/d/Y', PHPExcel_Shared_Date::ExcelToPHP('40878'));
	//drupal_set_message($cur);
	//drupal_set_message("<pre>".print_r($result, true)."</pre>");
	//$js = $result[0][0];
	
	foreach($result[0] as $js) {
		$graduation = explode('-', $js['Time']);
		$current_start_work = date('m/Y', PHPExcel_Shared_Date::ExcelToPHP($js['Start Work (MMYYYY)']));
		$current_start_work = explode('/', $current_start_work);

		if ($js['End Work (MMYYYY)'] == 'Present') {
			$current_end = 'Present';
			$current_end_work = date('m/Y');
			$current_end_work = explode('/', $current_end_work);
		} else {
			$current_end = '';
			$current_end_work = date('m/Y', PHPExcel_Shared_Date::ExcelToPHP($js['End Work (MMYYYY)']));
			$current_end_work = explode('/', $current_end_work);
		}

		$params = array(
			'uid' => '',
			'email_address' => $js['Email address'],
			'first_name' => $js['Candidate Name (First Name)'],
			'last_name' => $js['Candidate Name (Last Name)'],
			'phone' => $js['Phone'],
			'nationality' => $js['Nationality'],
			'expected_salary' => $js['Salary Expectation (Per month)'],
			'about_yourself' => '',
			'address_street' => $js['Street Name'],
			'address_country' => $js['Country'],
			'address_province' => $js['Province'],
			'address_zip' => $js['Zip Code'],
			'address_city' => $js['City'],
			'current_title' => $js['Current Title'],
			'current_company' => $js['Company Name'],
			'work_month_start' => $current_start_work[0],
			'work_year_start' => $current_start_work[1],
			'work_month_end' => $current_end_work[0], 
			'work_year_end' => $current_end_work[1],
			'current_work_present' => $current_end,
			//'industry_work_month_start' => $js['Email address'], 
			//'industry_work_year_start' => $js['Email address'],
			//'industry_work_month_end' => $js['Email address'], 
			//'industry_work_year_end' => $js['Email address'],
			//'industry_present' => $js['Email address'],
			'current_city' => $js['Current Location – City'],
			'current_other_city' => '',
			'current_industry' => $js['Current Industry'],
			'education' => $js['School Name'],
			'graduation' => $graduation[1],
			'major' => $js['Major'],
			'education_city' => $js['Education Location – City'],
			'education_other_city' => '',
			'email' => $js['Email address'],
			'public_profile_url' => '',
			'status' => $js['Status'],
			'target_position' => $js['Target Position'],
			'assessment' => $js['Conext Assessment'],
			'assessment_note' => $js['Conext Assessment Note'],
			'client_name' => $js['Client Name'],
			'client_assessment' => $js['Client Assessment'],
			'client_assessment_note' => $js['Client Assessment Note'],
			'other_notes' => $js['Other Notes'],
			'get_profile_from' => $js['Get Profile from'],
			'get_profile_from_other' => '',
			'cv' => '',
			'industry_experience' => $js['Year Experienced'],
			'updated_by' => '-'
		);
		drupal_set_message("<pre>".print_r($params, true)."</pre>");
		admin_insert_job_seeker($params);
	}
	return 'test';
}

function other_setting_form($form, &$form_state) {
	$form['conext_email_from'] = array(
			'#type' => 'textfield', 
			'#title' => 'Email broadcast from',
			'#required' => true,
			'#default_value' => variable_get('conext_email_from'),
	);
	$form['conext_contact_email_to'] = array(
			'#type' => 'textfield', 
			'#title' => '"Contact Us on Website", E-mail to',
			'#required' => true,
			'#default_value' => variable_get('conext_contact_email_to'),
	);
	$form['conext_applied_job_email_to'] = array(
			'#type' => 'textfield', 
			'#title' => '"Candidate Job Applied", e-mail to',
			'#required' => true,
			'#default_value' => variable_get('conext_applied_job_email_to'),
	);
	$form['conext_employer_posted_job_to'] = array(
			'#type' => 'textfield', 
			'#title' => '"Employer Posted Job", E-mail to',
			'#required' => true,
			'#default_value' => variable_get('conext_employer_posted_job_to'),
	);
	$form['about_conext'] = array(
			'#type' => 'textfield', 
			'#title' => 'About Conext',
			'#type' => 'text_format',
			'#default_value' => variable_get('about_conext'),
	);
	$form['office_address'] = array(
			'#type' => 'textfield', 
			'#title' => 'Office Address',
			'#type' => 'text_format',
			'#default_value' => variable_get('office_address'),
	);
	$form['about_who_we_are'] = array(
			'#type' => 'textfield', 
			'#title' => 'About Us- Who We Are',
			'#type' => 'text_format',
			'#default_value' => variable_get('about_who_we_are'),
	);
	$form['about_what_we_do'] = array(
			'#type' => 'textfield', 
			'#title' => 'About Us- What We Do',
			'#type' => 'text_format',
			'#default_value' => variable_get('about_what_we_do'),
	);
	$form['about_work_with_us'] = array(
			'#type' => 'textfield', 
			'#title' => 'About Us- Work With Us',
			'#type' => 'text_format',
			'#default_value' => variable_get('about_work_with_us'),
	);
	/*$form['twitter'] = array(
			'#type' => 'textfield', 
			'#title' => 'Twitter',
			'#default_value' => variable_get('twitter'),
	);*/
	$form['facebook'] = array(
			'#type' => 'textfield', 
			'#title' => 'Facebook',
			'#default_value' => variable_get('facebook'),
	);
	$form['linkedin'] = array(
			'#type' => 'textfield', 
			'#title' => 'Linkedin',
			'#default_value' => variable_get('linkedin'),
	);
	$form['instagram'] = array(
			'#type' => 'textfield', 
			'#title' => 'Instagram',
			'#default_value' => variable_get('instagram'),
	);
	$form['submit'] = array(
			'#type' => 'submit', 
			'#title' => 'Submit',
			'#value' => 'Submit'
	);

	return $form;    
}

function other_setting_form_submit($form, &$form_state) {
	$conext_email_from = variable_set('conext_email_from', $form['conext_email_from']['#value']);
	$conext_contact_email_to = variable_set('conext_contact_email_to', $form['conext_contact_email_to']['#value']);
	$conext_applied_job_email_to = variable_set('conext_applied_job_email_to', $form['conext_applied_job_email_to']['#value']);
	$conext_employer_posted_job_to = variable_set('conext_employer_posted_job_to', $form['conext_employer_posted_job_to']['#value']);
	$about_conext = variable_set('about_conext', $form['about_conext']['value']['#value']);
	$office_address = variable_set('office_address', $form['office_address']['value']['#value']);
	$about_who_we_are = variable_set('about_who_we_are', $form['about_who_we_are']['value']['#value']);
	$about_what_we_do = variable_set('about_what_we_do', $form['about_what_we_do']['value']['#value']);
	$about_what_we_do = variable_set('about_work_with_us', $form['about_work_with_us']['value']['#value']);
	//$twitter = variable_set('twitter', $form['twitter']['#value']);
	$facebook = variable_set('facebook', $form['facebook']['#value']);
	$linkedin = variable_set('linkedin', $form['linkedin']['#value']);
	$instagram = variable_set('instagram', $form['instagram']['#value']);
	drupal_set_message("Save Successfully", "notice");
}

function other_setting() {
	$output = "<h1>Other Setting</h1>";
	$form = drupal_get_form('other_setting_form');
	$output .= drupal_render($form);

	return $output;
}