<?php
// $Id$
function admin_page_menu() {
	$items['admin/employer'] = array(
		'title' => t('Admin Employer'),
		'description' => 'Admin Employer',
		'page callback' => 'admin_employer',
		'access arguments' => array('access admin employer'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/employer/detail'] = array(
		'title' => t('Admin Employer Detail'),
		'description' => 'Admin Employer Detail',
		'page callback' => 'admin_employer_detail',
		'access arguments' => array('access admin employer'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/employer/export'] = array(
		'title' => t('Admin Employer Export'),
		'description' => 'Admin Employer Export',
		'page callback' => 'admin_employer_export',
		'access arguments' => array('access admin employer'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job_seeker'] = array(
		'title' => t('Admin Job Seeker'),
		'description' => 'Admin Job Seeker',
		'page callback' => 'admin_job_seeker',
		'access arguments' => array('access admin job seeker'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job_seeker/%/edit'] = array(
		'title' => t('Admin Job Seeker'),
		'description' => 'admin job seeker edit',
		'page callback' => 'admin_job_seeker_edit',
		'page arguments' => array(2),
		'access arguments' => array('access admin job seeker'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job_seeker/add'] = array(
		'title' => t('Admin Job Seeker'),
		'description' => 'admin job seeker add',
		'page callback' => 'admin_job_seeker_add',
		'access arguments' => array('access admin job seeker'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job_seeker/detail'] = array(
		'title' => t('Admin Job Seeker Detail'),
		'description' => 'Admin Job Seeker Detail',
		'page callback' => 'admin_job_seeker_detail',
		'access arguments' => array('access admin job seeker'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job_seeker/export'] = array(
		'title' => t('Admin Job Seeker Export'),
		'description' => 'Admin Job Seeker Export',
		'page callback' => 'admin_job_seeker_export',
		'access arguments' => array('access admin job seeker'),
		'type' =>  MENU_CALLBACK,
	);

	$items['admin/job'] = array(
		'title' => t('Admin Job'),
		'description' => 'Admin Job',
		'page callback' => 'admin_job',
		'access arguments' => array('access admin job'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/job/detail'] = array(
		'title' => t('Admin Job Detail'),
		'description' => 'Admin Job Detail',
		'page callback' => 'admin_job_detail',
		'access arguments' => array('access admin job'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/contact'] = array(
		'title' => t('Admin Contact'),
		'description' => 'Admin Contact',
		'page callback' => 'admin_contact',
		'access arguments' => array('access admin contact'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/contact/detail'] = array(
		'title' => t('Admin Contact Detail'),
		'description' => 'Admin Contact Detail',
		'page callback' => 'admin_contact_detail',
		'access arguments' => array('access admin contact'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/applied_job_opening'] = array(
		'title' => t('Admin Applied Job Opening'),
		'description' => 'Admin Applied Job Opening',
		'page callback' => 'admin_applied_job_opening',
		'access arguments' => array('access admin applied_job_opening'),
		'type' =>  MENU_CALLBACK,
	);
	
	$items['admin/applied_job_opening/detail'] = array(
		'title' => t('Admin Applied Job Opening Detail'),
		'description' => 'Admin Applied Job Opening Detail',
		'page callback' => 'admin_applied_job_opening_detail',
		'access arguments' => array('access admin applied_job_opening'),
		'type' =>  MENU_CALLBACK,
	);
		
	$items['admin/applied_job'] = array(
		'title' => t('Admin Applied Job'),
		'description' => 'Admin Applied Job',
		'page callback' => 'admin_applied_job',
		'access arguments' => array('access admin applied job'),
		'type' =>  MENU_CALLBACK,
	);
     
	$items['admin/other_setting'] = array(
		'title' => t('Other Setting'),
		'description' => 'other setting',
		'page callback' => 'other_setting',
		'access arguments' => array('access other setting'),
		'type' =>  MENU_CALLBACK,
	);
	
	return $items;
}

/**
 * Implements hook_permission().
 */
function admin_page_permission() {
  return array(
    'access admin employer' => array(
      'title' => t('Access admin Employer'),
    ), 
		'access admin job seeker' => array(
      'title' => t('Access admin Job Seeker'),
    ), 
		'access admin applied job' => array(
      'title' => t('Access admin applied job'),
    ), 
		'access admin job' => array(
      'title' => t('Access admin job'),
    ), 
		'access other setting' => array(
      'title' => t('Access Other Setting'),
    ), 
		'access admin contact' => array(
      'title' => t('Access Admin Contact'),
    ), 
		'access admin applied_job_opening' => array(
      'title' => t('Access Admin Applied Job Opening'),
    )
  );
}

/**
 * Implements hook_theme().
 */
function admin_page_theme($existing, $type, $theme, $path) {
	return array(
		'employer_list' => array(
			'variables' => array('content' => NULL),
			'template' => 'employer_list',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'employer_detail' => array(
			'variables' => array('content' => NULL),
			'template' => 'employer_detail',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'job_seeker_list' => array(
			'variables' => array('content' => NULL),
			'template' => 'job_seeker_list',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'job_seeker_detail' => array(
			'variables' => array('content' => NULL),
			'template' => 'job_seeker_detail',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'job_list' => array(
			'variables' => array('content' => NULL),
			'template' => 'job_list',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'job_detail' => array(
			'variables' => array('content' => NULL),
			'template' => 'job_detail',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'contact_list' => array(
			'variables' => array('content' => NULL),
			'template' => 'contact_list',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'contact_detail' => array(
			'variables' => array('content' => NULL),
			'template' => 'contact_detail',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'applied_job_opening_list' => array(
			'variables' => array('content' => NULL),
			'template' => 'applied_job_opening_list',
			'path' => drupal_get_path('module', 'admin_page')
		),
		'applied_job_opening_detail' => array(
			'variables' => array('content' => NULL),
			'template' => 'applied_job_opening_detail',
			'path' => drupal_get_path('module', 'admin_page')
		)
	);
}

function admin_employer(){
	$keyword = (empty($_GET['keyword'])) ? '' : " WHERE mail LIKE '%".$_GET['keyword']."%' OR name LIKE '%".$_GET['keyword']."%' OR first_name LIKE '%".$_GET['keyword']."%' OR last_name LIKE '%".$_GET['keyword']."%' ";
	$query_employers_total = "SELECT COUNT(uid) FROM users a 
		INNER JOIN conext_employer b ON a.uid = b.user_id".$keyword;
 	$employers_total = db_query($query_employers_total)->fetchField();
	
	// for paging
	$limit = 50;
	$pages = ceil($employers_total / $limit);
	$page = empty($_GET['page']) ? 1 : $_GET['page'];
	$offset = ($page - 1)  * $limit;
	
	$query_employers = "SELECT * FROM users a 
		INNER JOIN conext_employer b ON a.uid = b.user_id".$keyword." LIMIT ".$limit." OFFSET ".$offset;
 	$employers = db_query($query_employers);
	
	$content = array(
		'employers' => $employers,
		'pages' => $pages
	);
	
	//drupal_set_message('<pre>'.print_r($content, true).'</pre>');
	return theme('employer_list', array('content' => $content));
}

function admin_employer_detail(){
	$uid = arg(3);
	if (!empty($uid)) {
		$query_employer = "SELECT * FROM users a 
			INNER JOIN conext_employer b ON a.uid = b.user_id WHERE uid = :uid";
		$employer = db_query($query_employer, array('uid' => $uid));

		$content = array(
			'employer' => $employer
		);
	}
	return theme('employer_detail', array('content' => $content));
}

function admin_job_seeker(){
	global $base_url;
	
	if (empty($_GET['order'])) {
		$order = " ORDER BY a.created DESC ";
	} else {
		$order = " ORDER BY ".$_GET['order']." ".$_GET['sort'];
	}
		
	$keyword = (empty($_GET['keyword'])) ? '' : " WHERE mail LIKE '%".$_GET['keyword']."%' OR name LIKE '%".$_GET['keyword']."%' OR first_name LIKE '%".$_GET['keyword']."%' OR last_name LIKE '%".$_GET['keyword']."%' OR phone LIKE '%".$_GET['keyword']."%' OR address_street LIKE '%".$_GET['keyword']."%' OR address_country LIKE '%".$_GET['keyword']."%' OR address_province LIKE '%".$_GET['keyword']."%' OR address_zip LIKE '%".$_GET['keyword']."%' OR address_city LIKE '%".$_GET['keyword']."%' OR current_title LIKE '%".$_GET['keyword']."%' OR current_company LIKE '%".$_GET['keyword']."%' OR current_city LIKE '%".$_GET['keyword']."%' OR current_industry LIKE '%".$_GET['keyword']."%' OR education LIKE '%".$_GET['keyword']."%' OR graduation LIKE '%".$_GET['keyword']."%' OR major LIKE '%".$_GET['keyword']."%' OR education_city LIKE '%".$_GET['keyword']."%' OR nationality LIKE '%".$_GET['keyword']."%' OR about_yourself LIKE '%".$_GET['keyword']."%' ";
	
	$query_job_seekers_total = "SELECT COUNT(uid) FROM users a 
		INNER JOIN conext_job_seeker b ON a.uid = b.user_id".$keyword;
 	$job_seekers_total = db_query($query_job_seekers_total)->fetchField();
	
	// for paging
	$limit = 50;
	$pages = ceil($job_seekers_total / $limit);
	$page = empty($_GET['page']) ? 1 : $_GET['page'];
	$offset = ($page - 1)  * $limit;
	
	$query_job_seekers = "SELECT *, floor(DATEDIFF(concat(current_work_end, '/28'), concat(current_work_start, '/28')) / 365) AS experience_year FROM users a 
		INNER JOIN conext_job_seeker b ON a.uid = b.user_id". $keyword . $order ." LIMIT ".$limit." OFFSET ".$offset;
 	$job_seekers = db_query($query_job_seekers);
	
	$job_seeker_url = (empty($_GET['keyword'])) ? $base_url.'/admin/job_seeker?keyword=' : $base_url.'/admin/job_seeker?keyword='.$_GET['keyword'];
	
	$content = array(
		'job_seekers' => $job_seekers,
		'pages' => $pages,
		'job_seeker_url' => $job_seeker_url
	);
	
	return theme('job_seeker_list', array('content' => $content));
}

function admin_job_seeker_detail(){
	$uid = arg(3);
	if (!empty($uid)) {
		$query_job_seeker = "SELECT * FROM users a 
			INNER JOIN conext_job_seeker b ON a.uid = b.user_id WHERE uid = :uid";
		$job_seeker = db_query($query_job_seeker, array('uid' => $uid));

		$content = array(
			'job_seeker' => $job_seeker
		);
	}
	return theme('job_seeker_detail', array('content' => $content));
}

function admin_job_seeker_add(){
	$output = drupal_get_form('admin_job_seeker_form');
	
	return $output;
}

function admin_job_seeker_edit($uid){
	$output = drupal_get_form('admin_job_seeker_form');
	
	return $output;
}

function admin_job_seeker_form($form, &$form_state) {
	$uid = arg(2);
	
	if (!empty($uid)) {
		$query_job_seeker = "SELECT * FROM users a 
				INNER JOIN conext_job_seeker b ON a.uid = b.user_id WHERE uid = :uid";
		$job_seeker = db_query($query_job_seeker, array('uid' => $uid));
		foreach($job_seeker as $data) {
			$current_work_start = explode('/', $data->current_work_start);
			$current_work_end = explode('/', $data->current_work_end);
			
			$email = $data->mail;
			$first_name = $data->first_name;
			$last_name = $data->last_name;
			$phone = $data->phone;
			$nationality = $data->nationality;
			$public_profile_url = $data->public_profile_url;
			$expected_salary = $data->expected_salary;
			$about_yourself = $data->about_yourself;
			$address_street = $data->address_street;
			$address_country = $data->address_country;
			$address_province = $data->address_province;
			$address_zip = $data->address_zip;
			$address_city = $data->address_city;
			$address_other_city = is_city_exist($data->current_city)) ? '' : $data->current_city
			$current_title = $data->current_title;
			$current_company = $data->current_company;
			$current_city = $data->current_city;
			$current_industry = $data->current_industry;
			$education = $data->education;
			$graduation = $data->graduation;
			$major = $data->major;
			$education_city = $data->education_city;
			$status = $data->status;
			$target_position = $data->target_position;
			$assessment = $data->assessment;
			$assessment_note = $data->assessment_note;
			$client_name = $data->client_name;
			$client_assessment = $data->client_assessment;
			$client_assessment_note = $data->client_assessment_note;
			$other_notes = $data->other_notes;
			$get_profile_from = $data->get_profile_from;
		}
		
	}
	//drupal_set_message("<pre>".print_r($current_work_start, true)."</pre>");
	
	// generate dropdown options
	$months = conext_get_month();
	foreach($months as $month) {
		$month_options[$month] = $month;
	}
	$years = conext_get_year();
	foreach($years as $year) {
		$year_options[$year] = $year;
	}
	$expected_salaries = get_salary_range_v2();
	foreach($expected_salaries as $salary) {
		$expected_salary_options[$salary] = $salary;
	}
	$industries = get_term_list ('company_industry');
	foreach($industries as $industry) {
		$industry_options[$industry['name']] = $industry['name'];
	}
	$cities = db_query("SELECT id, nama_kota FROM conext_kota");
	foreach($cities as $city) {
		$city_options[$city->nama_kota] = $city->nama_kota;
	}
	$assessment_options = array('Passed', 'Not Passed');
	$status_options = array('Not Approached', 'Not Operated', 'Processed', 'Hired', 'Failed');
	$get_profile_from_options = array('Email Recruitment', 'Old Master Data', 'Linkedin', 'Virda', 'Ferina', 'Esiana', 'Janis', 'Conext Site', 'Others');
	
	
	$form['uid'] = array(
		'#type' => 'hidden', 
		'#title' => 'UID',
		'#default_value' => (empty($uid)) ? '' : $uid
	);
	// PERSONAL INFO
	$form['personal_info'] = array(
    '#type' => 'fieldset',
    '#title' => t('Personal Info'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['personal_info']['email'] = array(
		'#type' => 'textfield', 
		'#title' => 'Email Address',
		'#required' => true,
		'#default_value' => (empty($email)) ? '' : $email
	);
	$form['personal_info']['first_name'] = array(
		'#type' => 'textfield', 
		'#title' => 'First Name',
		'#required' => true,
		'#default_value' => (empty($first_name)) ? '' : $first_name
	);
	$form['personal_info']['last_name'] = array(
		'#type' => 'textfield', 
		'#title' => 'Last Name',
		'#default_value' => (empty($last_name)) ? '' : $last_name
	);
	$form['personal_info']['phone'] = array(
		'#type' => 'textfield', 
		'#title' => 'Phone',
		'#default_value' => (empty($phone)) ? '' : $phone
	);
	$form['personal_info']['nationality'] = array(
		'#type' => 'textfield', 
		'#title' => 'Nationality',
		'#default_value' => (empty($nationality)) ? '' : $nationality
	);
	$form['personal_info']['public_profile_url'] = array(
		'#type' => 'textfield', 
		'#title' => 'Linkedin Profile',
		'#default_value' => (empty($public_profile_url)) ? '' : $public_profile_url
	);
	$form['personal_info']['expected_salary'] = array(
		'#type' => 'select', 
		'#title' => 'Expected Salary',
		'#options' => $expected_salary_options,
		'#default_value' => (empty($expected_salary)) ? '' : $expected_salary
	);
	$form['personal_info']['about_yourself'] = array(
		'#type' => 'textarea', 
		'#title' => 'About Yourself',
		'#default_value' => (empty($about_yourself)) ? '' : $about_yourself
	);
	
	// ADDRESS
	$form['address'] = array(
    '#type' => 'fieldset',
    '#title' => t('Address'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['address']['address_street'] = array(
		'#type' => 'textfield', 
		'#title' => 'Street',
		'#default_value' => (empty($address_street)) ? '' : $address_street
	);
	$form['address']['address_country'] = array(
		'#type' => 'textfield', 
		'#title' => 'Country',
		'#default_value' => (empty($address_country)) ? '' : $address_country
	);
	$form['address']['address_province'] = array(
		'#type' => 'textfield', 
		'#title' => 'Province',
		'#default_value' => (empty($address_province)) ? '' : $address_province
	);
	$form['address']['address_zip'] = array(
		'#type' => 'textfield', 
		'#title' => 'Zip Code',
		'#default_value' => (empty($address_zip)) ? '' : $address_zip
	);
	$form['address']['address_city'] = array(
		'#type' => 'select', 
		'#title' => 'City',
		'#options' => $city_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($address_city)) ? '' : $address_city
	);
	$form['address']['address_other_city'] = array(
		'#type' => 'textfield', 
		'#title' => 'Other City',
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($address_other_city)) ? '' : $address_other_city
	);
	
	// CURRENT WORK
	$form['current_work'] = array(
    '#type' => 'fieldset',
    '#title' => t('Current Work'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['current_work']['title'] = array(
		'#type' => 'textfield', 
		'#title' => 'Title',
		'#default_value' => (empty($current_title)) ? '' : $current_title
	);
	$form['current_work']['company'] = array(
		'#type' => 'textfield', 
		'#title' => 'Company',
		'#default_value' => (empty($current_company)) ? '' : $current_company
	);
	$form['current_work']['city'] = array(
		'#type' => 'select', 
		'#title' => 'City',
		'#options' => $city_options,
		'#default_value' => (empty($current_city)) ? '' : $current_city
	);
	$form['current_work']['industry'] = array(
		'#type' => 'select', 
		'#title' => 'Industry',
		'#options' => $industry_options,
		'#default_value' => (empty($current_industry)) ? '' : $current_industry
	);
	$form['current_work']['start'] = array(
    '#type' => 'fieldset',
    '#title' => t('Work Start'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['current_work']['start']['month'] = array(
		'#type' => 'select', 
		'#title' => 'Month',
		'#options' => $month_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($current_work_start)) ? '' : $current_work_start[1]
	);
	$form['current_work']['start']['year'] = array(
		'#type' => 'select', 
		'#title' => 'Year',
		'#options' => $year_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($current_work_start)) ? '' : $current_work_start[0]
	);
	$form['current_work']['end'] = array(
    '#type' => 'fieldset',
    '#title' => t('Work End'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['current_work']['end']['month'] = array(
		'#type' => 'select', 
		'#title' => 'Month',
		'#options' => $month_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($current_work_end)) ? '' : $current_work_end[1]
	);
	$form['current_work']['end']['year'] = array(
		'#type' => 'select', 
		'#title' => 'Year',
		'#options' => $year_options,
		'#prefix' => '<div style="float: left">',
		'#suffix' => '</div>',
		'#default_value' => (empty($current_work_end)) ? '' : $current_work_end[0]
	);
	
	// Education
	$form['education'] = array(
    '#type' => 'fieldset',
    '#title' => t('Education'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['education']['education'] = array(
		'#type' => 'textfield', 
		'#title' => 'Institute',
		'#default_value' => (empty($education)) ? '' : $education
	);
	$form['education']['graduation'] = array(
		'#type' => 'select', 
		'#title' => 'Graduation',
		'#options' => $year_options,
		'#default_value' => (empty($graduation)) ? '' : $graduation
	);
	$form['education']['major'] = array(
		'#type' => 'textfield', 
		'#title' => 'Major',
		'#default_value' => (empty($major)) ? '' : $major
	);
	$form['education']['city'] = array(
		'#type' => 'select', 
		'#title' => 'City',
		'#options' => $city_options,
		'#default_value' => (empty($education_city)) ? '' : $education_city
	);
	
	// Conext Internal
	$form['conext'] = array(
    '#type' => 'fieldset',
    '#title' => t('Conext Internal'),
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );
	$form['conext']['status'] = array(
		'#type' => 'select', 
		'#title' => 'Status',
		'#options' => $status_options,
		'#default_value' => (empty($status)) ? '' : $status
	);
	$form['conext']['target_position'] = array(
		'#type' => 'textfield', 
		'#title' => 'Target Position',
		'#default_value' => (empty($target_position)) ? '' : $target_position
	);
	$form['conext']['assessment'] = array(
		'#type' => 'select', 
		'#title' => 'Assessment',
		'#options' => $assessment_options,
		'#default_value' => (empty($assessment)) ? '' : $assessment
	);
	$form['conext']['assessment_note'] = array(
		'#type' => 'textarea', 
		'#title' => 'Assessment Note',
		'#default_value' => (empty($assessment_note)) ? '' : $assessment_note
	);
	$form['conext']['client_name'] = array(
		'#type' => 'textfield', 
		'#title' => 'client Name',
		'#default_value' => (empty($client_name)) ? '' : $client_name
	);
	$form['conext']['client_assessment'] = array(
		'#type' => 'select', 
		'#title' => 'Client Assessment',
		'#options' => $assessment_options,
		'#default_value' => (empty($client_assessment)) ? '' : $client_assessment
	);
	$form['conext']['client_assessment_note'] = array(
		'#type' => 'textarea', 
		'#title' => 'Client Assessment Note',
		'#default_value' => (empty($client_assessment_note)) ? '' : $client_assessment_note
	);
	$form['conext']['other_notes'] = array(
		'#type' => 'textarea', 
		'#title' => 'Other Note',
		'#default_value' => (empty($other_notes)) ? '' : $other_notes
	);
	$form['conext']['get_profile_from'] = array(
		'#type' => 'select', 
		'#title' => 'Get Profile From',
		'#options' => $get_profile_from_options,
		'#default_value' => (empty($get_profile_from)) ? '' : $get_profile_from
	);
	
	$form['submit'] = array(
		'#type' => 'submit', 
		'#title' => 'Submit',
		'#value' => 'Submit'
	);

	return $form;    
}

function admin_job_seeker_form_submit($form, &$form_state) {
	drupal_set_message($form['personal_info']['email']['#value']." Save Successfully", "notice");
}

function admin_job(){
	if (empty($_GET['order'])) {
		$order = " ORDER BY a.created DESC ";
	} else {
		$order = " ORDER BY ".$_GET['order']." ".$_GET['sort'];
	}
	
	$keyword = (empty($_GET['keyword'])) ? '' : " WHERE a.title LIKE '%".$_GET['keyword']."%' OR b.title LIKE '%".$_GET['keyword']."%'";
	$query_jobs_total = "SELECT COUNT(nid) FROM node a 
		INNER JOIN conext_job b ON a.nid = b.drupal_job_id".$keyword;
 	$jobs_total = db_query($query_jobs_total)->fetchField();
	
	// for paging
	$limit = 50;
	$pages = ceil($query_jobs_total / $limit);
	$page = empty($_GET['page']) ? 1 : $_GET['page'];
	$offset = ($page - 1)  * $limit;
	
	$query_jobs = "SELECT *, e.name as industry FROM node a 
		INNER JOIN conext_job b ON a.nid = b.drupal_job_id
		LEFT JOIN (SELECT COUNT(id) as total_applied, job_seeker_id, job_id FROM conext_job_applied) c ON b.drupal_job_id = c.job_id
		LEFT JOIN conext_employer d ON b.employer_id = d.user_id
		LEFT JOIN taxonomy_term_data e ON b.industry = e.tid"
		. $keyword . $order . " LIMIT ".$limit." OFFSET ".$offset;
 	$jobs = db_query($query_jobs);
	
	$job_url = (empty($_GET['keyword'])) ? $base_url.'/admin/job?keyword=' : $base_url.'/admin/job?keyword='.$_GET['keyword'];
	
	$content = array(
		'jobs' => $jobs,
		'pages' => $pages,
		'job_url' => $job_url
	);
	
	return theme('job_list', array('content' => $content));
}

function admin_job_detail(){
	$nid = arg(3);
	$job_list = array();
	
	if ($_POST) {
		$job_status = $_POST['job_status'];
		$query_update = "UPDATE conext_job SET job_status = :job_status WHERE drupal_job_id = :drupal_job_id";
		db_query($query_update, array('job_status' => $job_status, 'drupal_job_id' => $nid));
		drupal_set_message('Updated Successfully');
	}
	
	$query_job = "SELECT * FROM node a 
		INNER JOIN conext_job b ON a.nid = b.drupal_job_id WHERE nid = :nid LIMIT 1";
 	$jobs = db_query($query_job, array('nid' => $nid));
	
	foreach($jobs as $job) {
		//$qualification = taxonomy_term_load($job->qualification);
		//$qualification_name = $qualification->name;
		
		$industry = taxonomy_term_load($job->industry);
		$industry_name = $industry->name;
		
		$employer = db_query('SELECT mail FROM users WHERE uid = '.$job->employer_id)->fetchField();
		$job_seekers = db_query('SELECT user_id, first_name, last_name FROM conext_job_applied a LEFT JOIN conext_job_seeker b ON a.job_seeker_id = b.user_id WHERE job_id = '.$job->drupal_job_id);
		
		$job_list = array(
			'nid' => $nid,
			'employer' => $employer,
			'title' => $job->title,
			'location' => $job->location,
			//'qualification' => $qualification_name,
			'qualification' => $job->qualification,
			'salary_range' => $job->salary_range,
			'industry' => $industry_name,
			'requirement' => $job->requirement,
			'responsibility' => $job->responsibility,
			'short_description' => $job->short_description,
			'benefit' => $job->benefit,
			'publish_job_public' => $job->publish_job_public,
			'job_status' => $job->job_status,
			'job_types' => $job->job_type,
			'created_at' => $job->created_at,
			'job_seekers' => $job_seekers
		);
	}
	
	$content = array(
		'job' => $job_list
	);
	
	return theme('job_detail', array('content' => $content));
}

function admin_contact(){
	$keyword = (empty($_GET['keyword'])) ? '' : " WHERE name LIKE '%".$_GET['keyword']."%' OR email LIKE '%".$_GET['keyword']."%' OR subject LIKE '%".$_GET['keyword']."%' OR message LIKE '%".$_GET['keyword']."%' OR company LIKE '%".$_GET['keyword']."%' ";
	$query_contact_total = "SELECT COUNT(id) FROM conext_contact ".$keyword;
 	$job_contact_total = db_query($query_contact_total)->fetchField();
	
	// for paging
	$limit = 50;
	$pages = ceil($job_contact_total / $limit);
	$page = empty($_GET['page']) ? 1 : $_GET['page'];
	$offset = ($page - 1)  * $limit;
	
	$query_contacts = "SELECT * FROM conext_contact ".$keyword." LIMIT ".$limit." OFFSET ".$offset;
 	$contacts = db_query($query_contacts);
	
	$content = array(
		'contacts' => $contacts,
		'pages' => $pages
	);
	
	return theme('contact_list', array('content' => $content));
}

function admin_contact_detail(){
	$id = arg(3);
	if (!empty($id)) {
		$query_contact = "SELECT * FROM conext_contact WHERE id = :id";
		$contact = db_query($query_contact, array('id' => $id));

		$content = array(
			'contact' => $contact
		);
	}
	return theme('contact_detail', array('content' => $content));
}

function admin_applied_job_opening(){
	$keyword = (empty($_GET['keyword'])) ? '' : " AND title LIKE '%".$_GET['keyword']."%' ";
	$query_job_applied_total = "SELECT COUNT(nid) FROM node a LEFT JOIN field_data_field_job_applied b ON a.nid=b.entity_id  WHERE type = 'conext_job_applied' ".$keyword;
 	$job_applied_total = db_query($query_job_applied_total)->fetchField();
	
	// for paging
	$limit = 50;
	$pages = ceil($job_applied_total / $limit);
	$page = empty($_GET['page']) ? 1 : $_GET['page'];
	$offset = ($page - 1)  * $limit;
	
	$query_job_applieds = "SELECT nid, title, field_job_applied_value FROM node a LEFT JOIN field_data_field_job_applied b ON a.nid=b.entity_id WHERE type = 'conext_job_applied' ".$keyword." LIMIT ".$limit." OFFSET ".$offset;
 	$job_applieds = db_query($query_job_applieds);
	
	$content = array(
		'contacts' => $job_applieds,
		'pages' => $pages
	);
	
	return theme('applied_job_opening_list', array('content' => $content));
}

function admin_applied_job_opening_detail(){
	$nid = arg(3);
	if (!empty($nid)) {
		$job_applied = node_load($nid);

		$content = array(
			'job_applied' => $job_applied
		);
	}
	return theme('applied_job_opening_detail', array('content' => $content));
}

function admin_job_seeker_export() {
	require 'sites/all/libraries/PHPExcel/Classes/PHPExcel.php';
	$objPHPExcel = new PHPExcel(); 
	$objPHPExcel->setActiveSheetIndex(0); 

	$rowCount = 3; 
	$horizontal_style = array('horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
	// SET HEADER - START
	$objPHPExcel->getActiveSheet()->SetCellValue('A1','Input Date');
	$objPHPExcel->getActiveSheet()->mergeCells('A1:A2');
	$objPHPExcel->getActiveSheet()->SetCellValue('B1','No.');
	$objPHPExcel->getActiveSheet()->mergeCells('B1:B2');
	$objPHPExcel->getActiveSheet()->SetCellValue('C1','Candidata Name (First Name)');
	$objPHPExcel->getActiveSheet()->mergeCells('C1:C2');
	$objPHPExcel->getActiveSheet()->SetCellValue('D1','Candidata Name (Last Name)');
	$objPHPExcel->getActiveSheet()->mergeCells('D1:D2');
	$objPHPExcel->getActiveSheet()->SetCellValue('E1','Email Address');
	$objPHPExcel->getActiveSheet()->mergeCells('E1:E2');
	$objPHPExcel->getActiveSheet()->SetCellValue('F1','Phone');
	$objPHPExcel->getActiveSheet()->mergeCells('F1:F2');
	// Address
	$objPHPExcel->getActiveSheet()->SetCellValue('G1','Address');
	$objPHPExcel->getActiveSheet()->mergeCells('G1:J1');
  $objPHPExcel->getActiveSheet()->getStyle('G1:J1')->getAlignment()->applyFromArray($horizontal_style);
	$objPHPExcel->getActiveSheet()->SetCellValue('G2','Street Name');
	$objPHPExcel->getActiveSheet()->SetCellValue('H2','Province');
	$objPHPExcel->getActiveSheet()->SetCellValue('I2','Country');
	$objPHPExcel->getActiveSheet()->SetCellValue('J2','Zip Code');
	// Current Position
	$objPHPExcel->getActiveSheet()->SetCellValue('K1','Current Position');
	$objPHPExcel->getActiveSheet()->mergeCells('K1:O1');
  $objPHPExcel->getActiveSheet()->getStyle('K1:O1')->getAlignment()->applyFromArray($horizontal_style);
	$objPHPExcel->getActiveSheet()->SetCellValue('K2','Title');
	$objPHPExcel->getActiveSheet()->SetCellValue('L2','Company Name');
	$objPHPExcel->getActiveSheet()->SetCellValue('M2','Duration (MM/YYYY to MM/YYYY)');
	$objPHPExcel->getActiveSheet()->SetCellValue('N2','Location - city');
	$objPHPExcel->getActiveSheet()->SetCellValue('O2','Industry');
	// Years of Experience
	$objPHPExcel->getActiveSheet()->SetCellValue('P1','Years of Experience');
	$objPHPExcel->getActiveSheet()->mergeCells('P1:P2');
	// Salary Expectation
	$objPHPExcel->getActiveSheet()->SetCellValue('Q1','Salary Expectation (Per month)');
	$objPHPExcel->getActiveSheet()->mergeCells('Q1:Q2');
	// Highest Education
	$objPHPExcel->getActiveSheet()->SetCellValue('R1','Highest Education');
	$objPHPExcel->getActiveSheet()->mergeCells('R1:U1');
  $objPHPExcel->getActiveSheet()->getStyle('R1:U1')->getAlignment()->applyFromArray($horizontal_style);
	$objPHPExcel->getActiveSheet()->SetCellValue('R2','School Name');
	$objPHPExcel->getActiveSheet()->SetCellValue('S2','Graduation Time');
	$objPHPExcel->getActiveSheet()->SetCellValue('T2','Major');
	$objPHPExcel->getActiveSheet()->SetCellValue('U2','Location - city');
	// Nationality
	$objPHPExcel->getActiveSheet()->SetCellValue('V1','Nationality');
	$objPHPExcel->getActiveSheet()->mergeCells('V1:V2');
	// SET HEADER - END
	
	// SET CONTENT - START
	//$keyword = (empty($_GET['keyword'])) ? '' : " WHERE mail LIKE '%".$_GET['keyword']."%' OR name LIKE '%".$_GET['keyword']."%' OR first_name LIKE '%".$_GET['keyword']."%' OR last_name LIKE '%".$_GET['keyword']."%' ";
	$job_seeker_ids = implode("','", $_POST['job_seeker_ids']);
	$query_job_seekers = "SELECT * FROM users a 
		INNER JOIN conext_job_seeker b ON a.uid = b.user_id WHERE user_id IN ('".$job_seeker_ids."')";
 	$job_seekers = db_query($query_job_seekers);
	
	foreach($job_seekers as $job_seeker) {
		// get experince years
		$experience_year = '-';
		$experience_month = ' ';
		if (!empty($job_seeker->current_work_start) && !empty($job_seeker->current_work_end)) {
			$current_work_start = explode('/', $job_seeker->current_work_start);
			$current_work_end = explode('/', $job_seeker->current_work_end);
			$work_start = new DateTime($current_work_start[0].'-'.$current_work_start[1].'-28');
			$work_end = new DateTime($current_work_end[0].'-'.$current_work_end[1].'-28');
			$day_diff = $work_start->diff($work_end);
			$experience_year = floor($day_diff->days / 365).' years';
			$experience_month .= floor(($day_diff->days - ($experience_year * 365)) / 30).' months';
		}
		// salary expectation
		//$expected_salary = (empty($job_seeker->expected_salary)) ? '-' : format_salary($job_seeker->expected_salary);
		$expected_salary = (empty($job_seeker->expected_salary)) ? '-' : $job_seeker->expected_salary;
		
		$objPHPExcel->getActiveSheet()->SetCellValue('A'.$rowCount, $job_seeker->created_at);
		$objPHPExcel->getActiveSheet()->SetCellValue('B'.$rowCount, $rowCount-2);
		$objPHPExcel->getActiveSheet()->SetCellValue('C'.$rowCount, $job_seeker->first_name);
		$objPHPExcel->getActiveSheet()->SetCellValue('D'.$rowCount, $job_seeker->last_name);
		$objPHPExcel->getActiveSheet()->SetCellValue('E'.$rowCount, $job_seeker->mail);
		$objPHPExcel->getActiveSheet()->SetCellValue('F'.$rowCount, $job_seeker->phone);
		$objPHPExcel->getActiveSheet()->SetCellValue('G'.$rowCount, $job_seeker->address_street);
		$objPHPExcel->getActiveSheet()->SetCellValue('H'.$rowCount, $job_seeker->address_province);
		$objPHPExcel->getActiveSheet()->SetCellValue('I'.$rowCount, $job_seeker->address_country);
		$objPHPExcel->getActiveSheet()->SetCellValue('J'.$rowCount, $job_seeker->address_zip);
		$objPHPExcel->getActiveSheet()->SetCellValue('K'.$rowCount, $job_seeker->current_title);
		$objPHPExcel->getActiveSheet()->SetCellValue('L'.$rowCount, $job_seeker->current_company);
		$objPHPExcel->getActiveSheet()->SetCellValue('M'.$rowCount, $job_seeker->current_work_start.' - '.$job_seeker->current_work_end);
		$objPHPExcel->getActiveSheet()->SetCellValue('N'.$rowCount, $job_seeker->current_city);
		$objPHPExcel->getActiveSheet()->SetCellValue('O'.$rowCount, $job_seeker->current_industry);
		$objPHPExcel->getActiveSheet()->SetCellValue('P'.$rowCount, $experience_year.$experience_month);
		$objPHPExcel->getActiveSheet()->SetCellValue('Q'.$rowCount, $expected_salary);
		$objPHPExcel->getActiveSheet()->SetCellValue('R'.$rowCount, $job_seeker->education);
		$objPHPExcel->getActiveSheet()->SetCellValue('S'.$rowCount, $job_seeker->graduation);
		$objPHPExcel->getActiveSheet()->SetCellValue('T'.$rowCount, $job_seeker->major);
		$objPHPExcel->getActiveSheet()->SetCellValue('U'.$rowCount, $job_seeker->education_city);
		$objPHPExcel->getActiveSheet()->SetCellValue('V'.$rowCount, $job_seeker->nationality);
		$rowCount++;
	}
	// SET CONTENT - END
	
	$objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel);
	$filename = 'conext_jobseeker.xlsx';
	header('Content-Type: application/vnd.ms-excel');
	header('Content-Disposition: attachment;filename="'.$filename.'"');
	header('Cache-Control: max-age=0');
	$objWriter->save('php://output');
}

function other_setting_form($form, &$form_state) {
	$form['conext_email_from'] = array(
			'#type' => 'textfield', 
			'#title' => 'Conext Email From',
			'#required' => true,
			'#default_value' => variable_get('conext_email_from'),
	);
	$form['conext_contact_email_to'] = array(
			'#type' => 'textfield', 
			'#title' => 'Conext Contact Email To',
			'#required' => true,
			'#default_value' => variable_get('conext_contact_email_to'),
	);
	$form['conext_applied_job_email_to'] = array(
			'#type' => 'textfield', 
			'#title' => 'Conext Applied Job Email To',
			'#required' => true,
			'#default_value' => variable_get('conext_applied_job_email_to'),
	);
	$form['conext_employer_posted_job_to'] = array(
			'#type' => 'textfield', 
			'#title' => 'Conext Employer Posted Job Email To',
			'#required' => true,
			'#default_value' => variable_get('conext_employer_posted_job_to'),
	);
	$form['about_conext'] = array(
			'#type' => 'textfield', 
			'#title' => 'About Conext',
			'#type' => 'text_format',
			'#default_value' => variable_get('about_conext'),
	);
	$form['office_address'] = array(
			'#type' => 'textfield', 
			'#title' => 'Office Address',
			'#type' => 'text_format',
			'#default_value' => variable_get('office_address'),
	);
	$form['about_who_we_are'] = array(
			'#type' => 'textfield', 
			'#title' => 'About Us- Who We Are',
			'#type' => 'text_format',
			'#default_value' => variable_get('about_who_we_are'),
	);
	$form['about_what_we_do'] = array(
			'#type' => 'textfield', 
			'#title' => 'About Us- What We Do',
			'#type' => 'text_format',
			'#default_value' => variable_get('about_what_we_do'),
	);
	$form['about_work_with_us'] = array(
			'#type' => 'textfield', 
			'#title' => 'About Us- Work With Us',
			'#type' => 'text_format',
			'#default_value' => variable_get('about_work_with_us'),
	);
	/*$form['twitter'] = array(
			'#type' => 'textfield', 
			'#title' => 'Twitter',
			'#default_value' => variable_get('twitter'),
	);*/
	$form['facebook'] = array(
			'#type' => 'textfield', 
			'#title' => 'Facebook',
			'#default_value' => variable_get('facebook'),
	);
	$form['linkedin'] = array(
			'#type' => 'textfield', 
			'#title' => 'Linkedin',
			'#default_value' => variable_get('linkedin'),
	);
	$form['instagram'] = array(
			'#type' => 'textfield', 
			'#title' => 'Instagram',
			'#default_value' => variable_get('instagram'),
	);
	$form['submit'] = array(
			'#type' => 'submit', 
			'#title' => 'Submit',
			'#value' => 'Submit'
	);

	return $form;    
}

function other_setting_form_submit($form, &$form_state) {
	$conext_email_from = variable_set('conext_email_from', $form['conext_email_from']['#value']);
	$conext_contact_email_to = variable_set('conext_contact_email_to', $form['conext_contact_email_to']['#value']);
	$conext_applied_job_email_to = variable_set('conext_applied_job_email_to', $form['conext_applied_job_email_to']['#value']);
	$conext_employer_posted_job_to = variable_set('conext_employer_posted_job_to', $form['conext_employer_posted_job_to']['#value']);
	$about_conext = variable_set('about_conext', $form['about_conext']['value']['#value']);
	$office_address = variable_set('office_address', $form['office_address']['value']['#value']);
	$about_who_we_are = variable_set('about_who_we_are', $form['about_who_we_are']['value']['#value']);
	$about_what_we_do = variable_set('about_what_we_do', $form['about_what_we_do']['value']['#value']);
	$about_what_we_do = variable_set('about_work_with_us', $form['about_work_with_us']['value']['#value']);
	//$twitter = variable_set('twitter', $form['twitter']['#value']);
	$facebook = variable_set('facebook', $form['facebook']['#value']);
	$linkedin = variable_set('linkedin', $form['linkedin']['#value']);
	$instagram = variable_set('instagram', $form['instagram']['#value']);
	drupal_set_message("Save Successfully", "notice");
}

function other_setting() {
	$output = "<h1>Other Setting</h1>";
	$form = drupal_get_form('other_setting_form');
	$output .= drupal_render($form);

	return $output;
}